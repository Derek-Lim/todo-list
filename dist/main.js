(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>r});var o=n(537),d=n.n(o),i=n(645),a=n.n(i)()(d());a.push([e.id,"body {\n    display: grid;\n    grid-template: 100px 650px / 1fr 3fr;\n    gap: 10px;\n}\n\nheader {\n    grid-area: 1 / 1 / 2 / 3;\n    font-size: 50px;\n    background-color: lightpink;\n    padding: 20px;\n    text-align: center;\n    border: 3px solid black;\n}\n\ndiv.sidebar {\n    grid-area: 2 / 1 / 3 / 2;\n    font-size: 30px;\n    background-color: aliceblue;\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    align-items: center;\n    border: 3px solid black;\n}\n\n.sidebar > .selected {\n    font-weight: 900;\n}\n\n.add-todo-button {\n    border-radius: 10px;\n    font-size: 20px;\n}\n\ndiv.todo-list {\n    grid-area: 2 / 2 / 3 / 3;\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n}\n\ndiv.todo-item {\n    display: flex;\n    justify-content: space-between;\n    background-color: lightgrey;\n    color: black;\n    padding: 10px;\n}\n\ndiv.todo-item.high {\n    border: 2px solid red;\n}\n\ndiv.todo-item.medium {\n    border: 2px solid orange;\n}\n\ndiv.todo-item.low {\n    border: 2px solid yellow;\n}\n\ndiv.todo-item > div {\n    display: flex;\n    gap: 20px;\n}\n\ndiv.todo-item .done {\n    color: grey;\n}\n\ndiv.todo-item label.done {\n    text-decoration: line-through;\n}\n\nform {\n    font-size: 20px;\n    border: 1px solid black;\n    width: max(150px, 85%);\n    display: flex;\n    flex-direction: column;\n    margin: 10px;\n    padding: 10px;\n    gap: 10px;\n}\n\ndiv.edit {\n    display: grid;\n    gap: 0px 150px;\n    grid-template-columns: 200px 1fr;\n    grid-template-rows: 1fr;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,oCAAoC;IACpC,SAAS;AACb;;AAEA;IACI,wBAAwB;IACxB,eAAe;IACf,2BAA2B;IAC3B,aAAa;IACb,kBAAkB;IAClB,uBAAuB;AAC3B;;AAEA;IACI,wBAAwB;IACxB,eAAe;IACf,2BAA2B;IAC3B,aAAa;IACb,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,mBAAmB;IACnB,uBAAuB;AAC3B;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,mBAAmB;IACnB,eAAe;AACnB;;AAEA;IACI,wBAAwB;IACxB,aAAa;IACb,sBAAsB;IACtB,QAAQ;AACZ;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,2BAA2B;IAC3B,YAAY;IACZ,aAAa;AACjB;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,wBAAwB;AAC5B;;AAEA;IACI,wBAAwB;AAC5B;;AAEA;IACI,aAAa;IACb,SAAS;AACb;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,6BAA6B;AACjC;;AAEA;IACI,eAAe;IACf,uBAAuB;IACvB,sBAAsB;IACtB,aAAa;IACb,sBAAsB;IACtB,YAAY;IACZ,aAAa;IACb,SAAS;AACb;;AAEA;IACI,aAAa;IACb,cAAc;IACd,gCAAgC;IAChC,uBAAuB;AAC3B",sourcesContent:["body {\n    display: grid;\n    grid-template: 100px 650px / 1fr 3fr;\n    gap: 10px;\n}\n\nheader {\n    grid-area: 1 / 1 / 2 / 3;\n    font-size: 50px;\n    background-color: lightpink;\n    padding: 20px;\n    text-align: center;\n    border: 3px solid black;\n}\n\ndiv.sidebar {\n    grid-area: 2 / 1 / 3 / 2;\n    font-size: 30px;\n    background-color: aliceblue;\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    align-items: center;\n    border: 3px solid black;\n}\n\n.sidebar > .selected {\n    font-weight: 900;\n}\n\n.add-todo-button {\n    border-radius: 10px;\n    font-size: 20px;\n}\n\ndiv.todo-list {\n    grid-area: 2 / 2 / 3 / 3;\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n}\n\ndiv.todo-item {\n    display: flex;\n    justify-content: space-between;\n    background-color: lightgrey;\n    color: black;\n    padding: 10px;\n}\n\ndiv.todo-item.high {\n    border: 2px solid red;\n}\n\ndiv.todo-item.medium {\n    border: 2px solid orange;\n}\n\ndiv.todo-item.low {\n    border: 2px solid yellow;\n}\n\ndiv.todo-item > div {\n    display: flex;\n    gap: 20px;\n}\n\ndiv.todo-item .done {\n    color: grey;\n}\n\ndiv.todo-item label.done {\n    text-decoration: line-through;\n}\n\nform {\n    font-size: 20px;\n    border: 1px solid black;\n    width: max(150px, 85%);\n    display: flex;\n    flex-direction: column;\n    margin: 10px;\n    padding: 10px;\n    gap: 10px;\n}\n\ndiv.edit {\n    display: grid;\n    gap: 0px 150px;\n    grid-template-columns: 200px 1fr;\n    grid-template-rows: 1fr;\n}"],sourceRoot:""}]);const r=a},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,d,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var r=0;r<this.length;r++){var c=this[r][0];null!=c&&(a[c]=!0)}for(var s=0;s<e.length;s++){var l=[].concat(e[s]);o&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),d&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=d):l[4]="".concat(d)),t.push(l))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),d="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(d," */");return[t].concat([i]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var i={},a=[],r=0;r<e.length;r++){var c=e[r],s=o.base?c[0]+o.base:c[0],l=i[s]||0,p="".concat(s," ").concat(l);i[s]=l+1;var u=n(p),m={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)t[u].references++,t[u].updater(m);else{var A=d(m,o);o.byIndex=r,t.splice(r,0,{identifier:p,updater:A,references:1})}a.push(p)}return a}function d(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,d){var i=o(e=e||[],d=d||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var r=n(i[a]);t[r].references--}for(var c=o(e,d),s=0;s<i.length;s++){var l=n(i[s]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}i=c}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var d=void 0!==n.layer;d&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,d&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var d=t[o];if(void 0!==d)return d.exports;var i=t[o]={id:o,exports:{}};return e[o](i,i.exports,n),i.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{var e=n(379),t=n.n(e),o=n(795),d=n.n(o),i=n(569),a=n.n(i),r=n(565),c=n.n(r),s=n(216),l=n.n(s),p=n(589),u=n.n(p),m=n(426),A={};A.styleTagTransform=u(),A.setAttributes=c(),A.insert=a().bind(null,"head"),A.domAPI=d(),A.insertStyleElement=l(),t()(m.Z,A),m.Z&&m.Z.locals&&m.Z.locals;const f=function(){const e=[{title:"learn webkit",description:"",dueDate:"2023-10-30",priority:"high",done:!1,project:"study"},{title:"jog",project:"gym",description:"10 miles",dueDate:"2023-10-31",priority:"medium",done:!1,project:"gym"}];return{getList:()=>e,addTodo:(t,n,o,d,i)=>{e.push(function(e,t,n,o,d=""){return{title:e,description:t,dueDate:n,priority:o,done:!1,project:d}}(t,n,o,d,i))},markDone:e=>e.done=!0,markUndone:e=>e.done=!1}}(),v=f.getList(),x=document.querySelector("body"),y=document.createElement("div");function b(e){y.textContent="",e.forEach(((t,n)=>{const o=document.createElement("div");o.classList.add("todo-item"),o.classList.add(g(t.title)),"high"===t.priority?o.classList.add("high"):"medium"===t.priority?o.classList.add("medium"):"low"===t.priority&&o.classList.add("low"),y.append(o),!0===t.done&&o.classList.add("done");const d=document.createElement("div");d.classList.add("todo-left"),o.append(d);const i=document.createElement("input");i.setAttribute("type","checkbox"),i.setAttribute("id",g(t.title)),i.setAttribute("name",g(t.title)),i.addEventListener("click",(()=>{!function(e,t,n,o,d,i,a,r){!0===n.checked?(t.classList.add("done"),o.classList.add("done"),d.classList.add("done"),i.classList.add("done"),a.classList.add("done"),r.markDone(e)):!1===n.checked&&(t.classList.remove("done"),o.classList.remove("done"),d.classList.remove("done"),i.classList.remove("done"),a.classList.remove("done"),r.markUndone(e))}(t,o,i,a,c,s,l,f)})),d.append(i),!0===t.done&&(i.checked=!0);const a=document.createElement("label");a.textContent=t.title,a.setAttribute("for",g(t.title)),d.append(a),!0===t.done&&a.classList.add("done");const r=document.createElement("div");r.classList.add("todo-right"),o.append(r);const c=document.createElement("button");c.classList.add("details"),c.textContent="Details",c.addEventListener("click",(()=>{!function(e,t){const n=document.createElement("form"),o=document.querySelector(".todo-item > form");o&&o.remove();const d=document.querySelector(`.${g(e.title)}`);d.classList.add("edit"),d.append(n);const i=document.createElement("label");i.textContent="Title: ",i.setAttribute("for","title"),n.append(i);const a=document.createElement("input");a.type="text",a.name="title",a.id="title",a.setAttribute("value",e.title),n.append(a);const r=document.createElement("label");r.textContent="Project: ",r.setAttribute("for","project"),n.append(r);const c=document.createElement("input");c.type="text",c.name="project",c.id="project",c.setAttribute("value",e.project),n.append(c);const s=document.createElement("label");s.textContent="Description: ",s.setAttribute("for","description"),n.append(s);const l=document.createElement("input");l.type="text",l.name="description",l.id="description",l.setAttribute("value",e.description),n.append(l);const p=document.createElement("label");p.textContent="Due-date: ",p.setAttribute("for","duedate"),n.append(p);const u=document.createElement("input");u.type="date",u.name="duedate",u.id="duedate",u.setAttribute("value",e.dueDate),n.append(u);const m=document.createElement("label");m.textContent="Priority: ",m.setAttribute("for","priority"),n.append(m);const A=document.createElement("select");A.id="priority",n.append(A);const f=document.createElement("option");f.value="high",f.textContent="high",A.append(f);const x=document.createElement("option");x.value="medium",x.textContent="medium",A.append(x);const y=document.createElement("option");y.value="low",y.textContent="low",A.append(y),"high"===e.priority?f.setAttribute("selected","selected"):"medium"===e.priority?x.setAttribute("selected","selected"):"low"===e.priority&&y.setAttribute("selected","selected");const b=document.createElement("button");b.type="submit",b.textContent="Confirm Edit",n.append(b),b.addEventListener("click",(()=>{C(),""===document.getElementById("title").value?alert("Please input title."):""===document.getElementById("duedate").value?alert("Please input due-date."):(v.splice(t,1,{title:document.getElementById("title").value,description:document.getElementById("description").value,dueDate:document.getElementById("duedate").value,priority:document.getElementById("priority").value,done:!1,project:document.getElementById("project").value}),n.remove(),E())}))}(t,n)})),r.append(c),!0===t.done&&c.classList.add("done");const s=document.createElement("div");s.textContent=t.dueDate,r.append(s),!0===t.done&&s.classList.add("done");const l=document.createElement("button");l.classList.add("delete"),l.textContent="Delete",l.addEventListener("click",(()=>{e.splice(n,1),b(e)})),r.append(l),!0===t.done&&l.classList.add("done")}))}y.classList.add("todo-list"),x.append(y);const g=e=>e.split(" ").join("-");function C(){document.querySelector("form").addEventListener("submit",(e=>{e.preventDefault()}))}function E(){const e=document.querySelector(".all"),t=document.querySelector(".selected");t&&t.classList.remove("selected"),e.classList.add("selected"),b(v)}E(),function(){const e=document.querySelector(".sidebar"),t=document.createElement("button");t.classList.add("add-todo-button"),t.textContent="Add Todo",t.addEventListener("click",(()=>{!function(){const e=document.querySelector(".sidebar"),t=document.querySelector(".sidebar > form");t&&t.remove();const n=document.createElement("form");e.append(n);const o=document.createElement("label");o.textContent="Title: ",o.setAttribute("for","title"),n.append(o);const d=document.createElement("input");d.type="text",d.name="title",d.id="title",n.append(d);const i=document.createElement("label");i.textContent="Project: ",i.setAttribute("for","project"),n.append(i);const a=document.createElement("input");a.type="text",a.name="project",a.id="project",n.append(a);const r=document.createElement("label");r.textContent="Description: ",r.setAttribute("for","description"),n.append(r);const c=document.createElement("input");c.type="text",c.name="description",c.id="description",n.append(c);const s=document.createElement("label");s.textContent="Due-date: ",s.setAttribute("for","duedate"),n.append(s);const l=document.createElement("input");l.type="date",l.name="duedate",l.id="duedate",n.append(l);const p=document.createElement("label");p.textContent="Priority: ",p.setAttribute("for","priority"),n.append(p);const u=document.createElement("select");u.id="priority",n.append(u);const m=document.createElement("option");m.value="high",m.textContent="high",u.append(m);const A=document.createElement("option");A.value="medium",A.textContent="medium",u.append(A);const v=document.createElement("option");v.value="low",v.textContent="low",u.append(v);const x=document.createElement("button");x.type="submit",x.textContent="Submit",n.append(x),x.addEventListener("click",(()=>{C(),""===document.getElementById("title").value?alert("Please input title."):""===document.getElementById("duedate").value?alert("Please input due-date."):(f.addTodo(document.getElementById("title").value,document.getElementById("description").value,document.getElementById("duedate").value,document.getElementById("priority").value,document.getElementById("project").value),n.remove(),E())}));const y=document.createElement("button");y.type="text",y.textContent="Cancel",n.append(y),y.addEventListener("click",(()=>{n.remove()}))}()})),e.append(t)}(),document.querySelector(".all").addEventListener("click",(()=>{E()})),document.querySelector(".study").addEventListener("click",(()=>{!function(){const e=document.querySelector(".study"),t=document.querySelector(".selected");t&&t.classList.remove("selected"),e.classList.add("selected");const n=v.filter((e=>"study"===e.project));y.textContent="",n.forEach(((e,t)=>{const n=document.createElement("div");n.classList.add("todo-item"),n.classList.add(g(e.title)),"high"===e.priority?n.classList.add("high"):"medium"===e.priority?n.classList.add("medium"):"low"===e.priority&&n.classList.add("low"),y.append(n),!0===e.done&&n.classList.add("done");const o=document.createElement("div");o.classList.add("todo-left"),n.append(o);const d=document.createElement("label");d.textContent=e.title,d.setAttribute("for",g(e.title)),o.append(d),!0===e.done&&d.classList.add("done");const i=document.createElement("div");i.classList.add("todo-right"),n.append(i);const a=document.createElement("div");a.textContent=e.dueDate,i.append(a),!0===e.done&&a.classList.add("done")}))}()})),document.querySelector(".gym").addEventListener("click",(()=>{!function(){const e=document.querySelector(".gym"),t=document.querySelector(".selected");t&&t.classList.remove("selected"),e.classList.add("selected");const n=v.filter((e=>"gym"===e.project));y.textContent="",n.forEach(((e,t)=>{const n=document.createElement("div");n.classList.add("todo-item"),n.classList.add(g(e.title)),"high"===e.priority?n.classList.add("high"):"medium"===e.priority?n.classList.add("medium"):"low"===e.priority&&n.classList.add("low"),y.append(n),!0===e.done&&n.classList.add("done");const o=document.createElement("div");o.classList.add("todo-left"),n.append(o);const d=document.createElement("label");d.textContent=e.title,d.setAttribute("for",g(e.title)),o.append(d),!0===e.done&&d.classList.add("done");const i=document.createElement("div");i.classList.add("todo-right"),n.append(i);const a=document.createElement("div");a.textContent=e.dueDate,i.append(a),!0===e.done&&a.classList.add("done")}))}()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QVNXLGNBQWMsT0FDdkNtRSxFQUFRSixVQUFVQyxJQUFJLGFBQ3RCRixFQUFTSSxPQUFPQyxHQUVoQixNQUFNRyxFQUFZakYsU0FBU1csY0FBYyxTQUN6Q3NFLEVBQVVWLFlBQWNuSSxFQUFLOEcsTUFDN0IrQixFQUFVakUsYUFBYSxNQUFPNEQsRUFBV3hJLEVBQUs4RyxRQUM5QzRCLEVBQVFELE9BQU9JLElBRUcsSUFBZDdJLEVBQUtrSCxNQUNMMkIsRUFBVVAsVUFBVUMsSUFBSSxRQUk1QixNQUFNYSxFQUFXeEYsU0FBU1csY0FBYyxPQUN4QzZFLEVBQVNkLFVBQVVDLElBQUksY0FDdkJGLEVBQVNJLE9BQU9XLEdBRWhCLE1BQU1MLEVBQVduRixTQUFTVyxjQUFjLE9BQ3hDd0UsRUFBU1osWUFBY25JLEVBQUtnSCxRQUM1Qm9DLEVBQVNYLE9BQU9NLElBRUUsSUFBZC9JLEVBQUtrSCxNQUNMNkIsRUFBU1QsVUFBVUMsSUFBSSxPQUMzQixHQUVSLENFcGdCSXVELEVBQWdCLEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvc3R5bGUuY3NzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3Qvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vdG9kby1saXN0L3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL3RvZG8tbGlzdC93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0L3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vdG9kby1saXN0L3dlYnBhY2svcnVudGltZS9ub25jZSIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvc3R5bGUuY3NzPzcxNjMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL3RvZG8tbGlzdC1mdW5jdGlvbnMuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL3RvZG8tbGlzdC5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYGJvZHkge1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgZ3JpZC10ZW1wbGF0ZTogMTAwcHggNjUwcHggLyAxZnIgM2ZyO1xuICAgIGdhcDogMTBweDtcbn1cblxuaGVhZGVyIHtcbiAgICBncmlkLWFyZWE6IDEgLyAxIC8gMiAvIDM7XG4gICAgZm9udC1zaXplOiA1MHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0cGluaztcbiAgICBwYWRkaW5nOiAyMHB4O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBib3JkZXI6IDNweCBzb2xpZCBibGFjaztcbn1cblxuZGl2LnNpZGViYXIge1xuICAgIGdyaWQtYXJlYTogMiAvIDEgLyAzIC8gMjtcbiAgICBmb250LXNpemU6IDMwcHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogYWxpY2VibHVlO1xuICAgIHBhZGRpbmc6IDIwcHg7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGdhcDogMjBweDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGJvcmRlcjogM3B4IHNvbGlkIGJsYWNrO1xufVxuXG4uc2lkZWJhciA+IC5zZWxlY3RlZCB7XG4gICAgZm9udC13ZWlnaHQ6IDkwMDtcbn1cblxuLmFkZC10b2RvLWJ1dHRvbiB7XG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICBmb250LXNpemU6IDIwcHg7XG59XG5cbmRpdi50b2RvLWxpc3Qge1xuICAgIGdyaWQtYXJlYTogMiAvIDIgLyAzIC8gMztcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgZ2FwOiA1cHg7XG59XG5cbmRpdi50b2RvLWl0ZW0ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Z3JleTtcbiAgICBjb2xvcjogYmxhY2s7XG4gICAgcGFkZGluZzogMTBweDtcbn1cblxuZGl2LnRvZG8taXRlbS5oaWdoIHtcbiAgICBib3JkZXI6IDJweCBzb2xpZCByZWQ7XG59XG5cbmRpdi50b2RvLWl0ZW0ubWVkaXVtIHtcbiAgICBib3JkZXI6IDJweCBzb2xpZCBvcmFuZ2U7XG59XG5cbmRpdi50b2RvLWl0ZW0ubG93IHtcbiAgICBib3JkZXI6IDJweCBzb2xpZCB5ZWxsb3c7XG59XG5cbmRpdi50b2RvLWl0ZW0gPiBkaXYge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZ2FwOiAyMHB4O1xufVxuXG5kaXYudG9kby1pdGVtIC5kb25lIHtcbiAgICBjb2xvcjogZ3JleTtcbn1cblxuZGl2LnRvZG8taXRlbSBsYWJlbC5kb25lIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IGxpbmUtdGhyb3VnaDtcbn1cblxuZm9ybSB7XG4gICAgZm9udC1zaXplOiAyMHB4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xuICAgIHdpZHRoOiBtYXgoMTUwcHgsIDg1JSk7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIG1hcmdpbjogMTBweDtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICAgIGdhcDogMTBweDtcbn1cblxuZGl2LmVkaXQge1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgZ2FwOiAwcHggMTUwcHg7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAyMDBweCAxZnI7XG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAxZnI7XG59YCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGUuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0lBQ0ksYUFBYTtJQUNiLG9DQUFvQztJQUNwQyxTQUFTO0FBQ2I7O0FBRUE7SUFDSSx3QkFBd0I7SUFDeEIsZUFBZTtJQUNmLDJCQUEyQjtJQUMzQixhQUFhO0lBQ2Isa0JBQWtCO0lBQ2xCLHVCQUF1QjtBQUMzQjs7QUFFQTtJQUNJLHdCQUF3QjtJQUN4QixlQUFlO0lBQ2YsMkJBQTJCO0lBQzNCLGFBQWE7SUFDYixhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLFNBQVM7SUFDVCxtQkFBbUI7SUFDbkIsdUJBQXVCO0FBQzNCOztBQUVBO0lBQ0ksZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksbUJBQW1CO0lBQ25CLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSx3QkFBd0I7SUFDeEIsYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixRQUFRO0FBQ1o7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsOEJBQThCO0lBQzlCLDJCQUEyQjtJQUMzQixZQUFZO0lBQ1osYUFBYTtBQUNqQjs7QUFFQTtJQUNJLHFCQUFxQjtBQUN6Qjs7QUFFQTtJQUNJLHdCQUF3QjtBQUM1Qjs7QUFFQTtJQUNJLHdCQUF3QjtBQUM1Qjs7QUFFQTtJQUNJLGFBQWE7SUFDYixTQUFTO0FBQ2I7O0FBRUE7SUFDSSxXQUFXO0FBQ2Y7O0FBRUE7SUFDSSw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsdUJBQXVCO0lBQ3ZCLHNCQUFzQjtJQUN0QixhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLFlBQVk7SUFDWixhQUFhO0lBQ2IsU0FBUztBQUNiOztBQUVBO0lBQ0ksYUFBYTtJQUNiLGNBQWM7SUFDZCxnQ0FBZ0M7SUFDaEMsdUJBQXVCO0FBQzNCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcImJvZHkge1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBncmlkLXRlbXBsYXRlOiAxMDBweCA2NTBweCAvIDFmciAzZnI7XFxuICAgIGdhcDogMTBweDtcXG59XFxuXFxuaGVhZGVyIHtcXG4gICAgZ3JpZC1hcmVhOiAxIC8gMSAvIDIgLyAzO1xcbiAgICBmb250LXNpemU6IDUwcHg7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0cGluaztcXG4gICAgcGFkZGluZzogMjBweDtcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgICBib3JkZXI6IDNweCBzb2xpZCBibGFjaztcXG59XFxuXFxuZGl2LnNpZGViYXIge1xcbiAgICBncmlkLWFyZWE6IDIgLyAxIC8gMyAvIDI7XFxuICAgIGZvbnQtc2l6ZTogMzBweDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogYWxpY2VibHVlO1xcbiAgICBwYWRkaW5nOiAyMHB4O1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBnYXA6IDIwcHg7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGJvcmRlcjogM3B4IHNvbGlkIGJsYWNrO1xcbn1cXG5cXG4uc2lkZWJhciA+IC5zZWxlY3RlZCB7XFxuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XFxufVxcblxcbi5hZGQtdG9kby1idXR0b24ge1xcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xcbiAgICBmb250LXNpemU6IDIwcHg7XFxufVxcblxcbmRpdi50b2RvLWxpc3Qge1xcbiAgICBncmlkLWFyZWE6IDIgLyAyIC8gMyAvIDM7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGdhcDogNXB4O1xcbn1cXG5cXG5kaXYudG9kby1pdGVtIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyZXk7XFxuICAgIGNvbG9yOiBibGFjaztcXG4gICAgcGFkZGluZzogMTBweDtcXG59XFxuXFxuZGl2LnRvZG8taXRlbS5oaWdoIHtcXG4gICAgYm9yZGVyOiAycHggc29saWQgcmVkO1xcbn1cXG5cXG5kaXYudG9kby1pdGVtLm1lZGl1bSB7XFxuICAgIGJvcmRlcjogMnB4IHNvbGlkIG9yYW5nZTtcXG59XFxuXFxuZGl2LnRvZG8taXRlbS5sb3cge1xcbiAgICBib3JkZXI6IDJweCBzb2xpZCB5ZWxsb3c7XFxufVxcblxcbmRpdi50b2RvLWl0ZW0gPiBkaXYge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBnYXA6IDIwcHg7XFxufVxcblxcbmRpdi50b2RvLWl0ZW0gLmRvbmUge1xcbiAgICBjb2xvcjogZ3JleTtcXG59XFxuXFxuZGl2LnRvZG8taXRlbSBsYWJlbC5kb25lIHtcXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBsaW5lLXRocm91Z2g7XFxufVxcblxcbmZvcm0ge1xcbiAgICBmb250LXNpemU6IDIwcHg7XFxuICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xcbiAgICB3aWR0aDogbWF4KDE1MHB4LCA4NSUpO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBtYXJnaW46IDEwcHg7XFxuICAgIHBhZGRpbmc6IDEwcHg7XFxuICAgIGdhcDogMTBweDtcXG59XFxuXFxuZGl2LmVkaXQge1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBnYXA6IDBweCAxNTBweDtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAyMDBweCAxZnI7XFxuICAgIGdyaWQtdGVtcGxhdGUtcm93czogMWZyO1xcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107XG5cbiAgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07XG5cbiAgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiB1cGRhdGVyO1xufVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xuXG4gICAgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG4gIGNzcyArPSBvYmouY3NzO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9XG5cbiAgLy8gRm9yIG9sZCBJRVxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKCkge30sXG4gICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHt9XG4gICAgfTtcbiAgfVxuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsIl9fd2VicGFja19yZXF1aXJlX18ubmMgPSB1bmRlZmluZWQ7IiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0IFRMIGZyb20gJy4vdG9kby1saXN0LmpzJztcblxuY29uc3QgVG9kb0xpc3QgPSBUTCgpO1xuY29uc3QgbGlzdCA9IFRvZG9MaXN0LmdldExpc3QoKTtcblxuY29uc3QgYm9keSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2JvZHknKTtcbmNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuY29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ3RvZG8tbGlzdCcpXG5ib2R5LmFwcGVuZChjb250YWluZXIpO1xuXG5leHBvcnQgZnVuY3Rpb24gRGlzcGxheVRvZG9MaXN0KGwpIHtcbiAgICAvL2NsZWFyIHRvZG8gbGlzdFxuICAgIGNvbnRhaW5lci50ZXh0Q29udGVudCA9ICcnO1xuICAgIC8vcmVuZGVyIHRvZG8gaXRlbXNcbiAgICBsLmZvckVhY2goKGl0ZW0sIGluZGV4KSA9PiB7XG4gICAgICAgIC8vY3JlYXRlIHN1Yi1jb250YWluZXIgZGl2XG4gICAgICAgIGNvbnN0IHRvZG9JdGVtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIHRvZG9JdGVtLmNsYXNzTGlzdC5hZGQoJ3RvZG8taXRlbScpO1xuICAgICAgICB0b2RvSXRlbS5jbGFzc0xpc3QuYWRkKGh5cGhlbmF0b3IoaXRlbS50aXRsZSkpO1xuICAgICAgICAvL2FkZCBjbGFzcyB0byBzZWxlY3QgaXRlbXMgdG8gY2hhbmdlIGJvcmRlciBjb2xvciBiYXNlZCBvbiBwcmlvcml0eVxuICAgICAgICBpZiAoaXRlbS5wcmlvcml0eSA9PT0gJ2hpZ2gnKSB7XG4gICAgICAgICAgICB0b2RvSXRlbS5jbGFzc0xpc3QuYWRkKCdoaWdoJyk7XG4gICAgICAgIH0gZWxzZSBpZiAoaXRlbS5wcmlvcml0eSA9PT0gJ21lZGl1bScpIHtcbiAgICAgICAgICAgIHRvZG9JdGVtLmNsYXNzTGlzdC5hZGQoJ21lZGl1bScpO1xuICAgICAgICB9IGVsc2UgaWYgKGl0ZW0ucHJpb3JpdHkgPT09ICdsb3cnKSB7XG4gICAgICAgICAgICB0b2RvSXRlbS5jbGFzc0xpc3QuYWRkKCdsb3cnKTtcbiAgICAgICAgfVxuICAgICAgICBjb250YWluZXIuYXBwZW5kKHRvZG9JdGVtKTtcbiAgICAgICAgLy9pZiBpdGVtIHdhcyBtYXJrZWQgZG9uZSwgbWFrZSBzdXJlIHRvIHJlZmxlY3QgdGhhdFxuICAgICAgICBpZiAoaXRlbS5kb25lID09PSB0cnVlKSB7XG4gICAgICAgICAgICB0b2RvSXRlbS5jbGFzc0xpc3QuYWRkKCdkb25lJyk7XG4gICAgICAgIH1cblxuICAgICAgICAvL2NyZWF0ZSBzdWItc3ViLWNvbnRhaW5lciBkaXZcbiAgICAgICAgY29uc3QgbGVmdERpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICBsZWZ0RGl2LmNsYXNzTGlzdC5hZGQoJ3RvZG8tbGVmdCcpO1xuICAgICAgICB0b2RvSXRlbS5hcHBlbmQobGVmdERpdik7XG4gICAgICAgIC8vY3JlYXRlIGlucHV0XG4gICAgICAgIGNvbnN0IHRvZG9JbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gICAgICAgIHRvZG9JbnB1dC5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAnY2hlY2tib3gnKTtcbiAgICAgICAgdG9kb0lucHV0LnNldEF0dHJpYnV0ZSgnaWQnLCBoeXBoZW5hdG9yKGl0ZW0udGl0bGUpKTtcbiAgICAgICAgdG9kb0lucHV0LnNldEF0dHJpYnV0ZSgnbmFtZScsIGh5cGhlbmF0b3IoaXRlbS50aXRsZSkpO1xuICAgICAgICAvLyB3aGVuIHVzZXIgY2hlY2tzIG9yIHVuY2hlY2tzIGEgY2hlY2tib3gsIHVwZGF0ZSByZWxldmFudCBwcm9wZXJ0aWVzXG4gICAgICAgIHRvZG9JbnB1dC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgICAgIHRvZG9Db21wbGV0ZShpdGVtLCB0b2RvSXRlbSwgdG9kb0lucHV0LCB0b2RvTGFiZWwsXG4gICAgICAgICAgICAgICAgICAgIHRvZG9EZXRhaWxzLCB0b2RvRGF0ZSwgdG9kb0RlbGV0ZSwgVG9kb0xpc3QpO1xuICAgICAgICB9KVxuICAgICAgICBsZWZ0RGl2LmFwcGVuZCh0b2RvSW5wdXQpO1xuICAgICAgICAvL2lmIGl0ZW0gaXMgbWFya2VkIGRvbmUsIG1ha2Ugc3VyZSB0byByZWZsZWN0IHRoYXRcbiAgICAgICAgaWYgKGl0ZW0uZG9uZSA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgdG9kb0lucHV0LmNoZWNrZWQgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIC8vY3JlYXRlIGxhYmVsXG4gICAgICAgIGNvbnN0IHRvZG9MYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7XG4gICAgICAgIHRvZG9MYWJlbC50ZXh0Q29udGVudCA9IGl0ZW0udGl0bGU7XG4gICAgICAgIHRvZG9MYWJlbC5zZXRBdHRyaWJ1dGUoJ2ZvcicsIGh5cGhlbmF0b3IoaXRlbS50aXRsZSkpO1xuICAgICAgICBsZWZ0RGl2LmFwcGVuZCh0b2RvTGFiZWwpO1xuICAgICAgICAvL2lmIGl0ZW0gd2FzIG1hcmtlZCBkb25lLCBtYWtlIHN1cmUgdG8gcmVmbGVjdCB0aGF0XG4gICAgICAgIGlmIChpdGVtLmRvbmUgPT09IHRydWUpIHtcbiAgICAgICAgICAgIHRvZG9MYWJlbC5jbGFzc0xpc3QuYWRkKCdkb25lJyk7XG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgLy9jcmVhdGUgc3ViLXN1Yi1jb250YWluZXIgZGl2XG4gICAgICAgIGNvbnN0IHJpZ2h0RGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIHJpZ2h0RGl2LmNsYXNzTGlzdC5hZGQoJ3RvZG8tcmlnaHQnKTtcbiAgICAgICAgdG9kb0l0ZW0uYXBwZW5kKHJpZ2h0RGl2KTtcbiAgICAgICAgLy9jcmVhdGUgXCJkZXRhaWxzXCIgYnV0dG9uXG4gICAgICAgIGNvbnN0IHRvZG9EZXRhaWxzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG4gICAgICAgIHRvZG9EZXRhaWxzLmNsYXNzTGlzdC5hZGQoJ2RldGFpbHMnKTtcbiAgICAgICAgdG9kb0RldGFpbHMudGV4dENvbnRlbnQgPSAnRGV0YWlscyc7XG4gICAgICAgIC8vaWYgdXNlciBjbGlja3MgXCJkZXRhaWxzXCIsIHNob3cgdXNlciBkZXRhaWxzLCBhbmQgYWxsb3cgZWRpdGluZ1xuICAgICAgICB0b2RvRGV0YWlscy5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgICAgIGVkaXRUb2RvRm9ybShpdGVtLCBpbmRleCk7XG4gICAgICAgIH0pXG4gICAgICAgIHJpZ2h0RGl2LmFwcGVuZCh0b2RvRGV0YWlscyk7XG4gICAgICAgIC8vaWYgaXRlbSB3YXMgbWFya2VkIGRvbmUsIG1ha2Ugc3VyZSB0byByZWZsZWN0IHRoYXRcbiAgICAgICAgaWYgKGl0ZW0uZG9uZSA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgdG9kb0RldGFpbHMuY2xhc3NMaXN0LmFkZCgnZG9uZScpO1xuICAgICAgICB9XG4gICAgICAgIC8vY3JlYXRlIGRpdiB0byBzaG93IGRhdGVcbiAgICAgICAgY29uc3QgdG9kb0RhdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgdG9kb0RhdGUudGV4dENvbnRlbnQgPSBpdGVtLmR1ZURhdGU7XG4gICAgICAgIHJpZ2h0RGl2LmFwcGVuZCh0b2RvRGF0ZSk7XG4gICAgICAgIC8vaWYgaXRlbSB3YXMgbWFya2VkIGRvbmUsIG1ha2Ugc3VyZSB0byByZWZsZWN0IHRoYXRcbiAgICAgICAgaWYgKGl0ZW0uZG9uZSA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgdG9kb0RhdGUuY2xhc3NMaXN0LmFkZCgnZG9uZScpO1xuICAgICAgICB9XG4gICAgICAgIC8vY3JlYXRlIFwiZGVsZXRlXCIgYnV0dG9uXG4gICAgICAgIGNvbnN0IHRvZG9EZWxldGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICAgICAgdG9kb0RlbGV0ZS5jbGFzc0xpc3QuYWRkKCdkZWxldGUnKTtcbiAgICAgICAgdG9kb0RlbGV0ZS50ZXh0Q29udGVudCA9ICdEZWxldGUnO1xuICAgICAgICAvL2lmIHVzZXIgY2xpY2tzIFwiZGVsZXRlXCIsIHJlbW92ZSBpdGVtIGZyb20gbGlzdCwgYW5kIHVwZGF0ZSBzY3JlZW5cbiAgICAgICAgdG9kb0RlbGV0ZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgICAgIGwuc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgICAgICAgIERpc3BsYXlUb2RvTGlzdChsKTtcbiAgICAgICAgfSlcbiAgICAgICAgcmlnaHREaXYuYXBwZW5kKHRvZG9EZWxldGUpO1xuICAgICAgICAvL2lmIGl0ZW0gd2FzIG1hcmtlZCBkb25lLCBtYWtlIHN1cmUgdG8gcmVmbGVjdCB0aGF0XG4gICAgICAgIGlmIChpdGVtLmRvbmUgPT09IHRydWUpIHtcbiAgICAgICAgICAgIHRvZG9EZWxldGUuY2xhc3NMaXN0LmFkZCgnZG9uZScpO1xuICAgICAgICB9XG4gICAgfSlcbn1cblxuLy9jcmVhdGUgZnVuY3Rpb24gdG8gaHlwaGVuYXRlIHN0cmluZ3NcbmNvbnN0IGh5cGhlbmF0b3IgPSAoc3RyaW5nKSA9PiB7XG4gICAgcmV0dXJuIHN0cmluZy5zcGxpdCgnICcpLmpvaW4oJy0nKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFkZFRvZG9CdXR0b24oKSB7XG4gICAgY29uc3Qgc2lkZWJhciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zaWRlYmFyJyk7XG4gICAgY29uc3QgdG9kb0J1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICAgIHRvZG9CdXR0b24uY2xhc3NMaXN0LmFkZCgnYWRkLXRvZG8tYnV0dG9uJyk7XG4gICAgdG9kb0J1dHRvbi50ZXh0Q29udGVudCA9ICdBZGQgVG9kbyc7XG4gICAgdG9kb0J1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgbmV3VG9kb0Zvcm0oYm9keSk7XG4gICAgfSlcbiAgICBzaWRlYmFyLmFwcGVuZCh0b2RvQnV0dG9uKTtcbn1cblxuLy8gV2hlbiB1c2VyIGNoZWNrcyBvciB1bmNoZWNrcyBhIGNoZWNrYm94LFxuLy8gdXBkYXRlIFwiZG9uZVwiIHByb3BlcnR5LCBhbmQgY2hhbmdlIHN0eWxlIGFjY29yZGluZ2x5XG5mdW5jdGlvbiB0b2RvQ29tcGxldGUoaXRlbSwgdG9kb0l0ZW0sIHRvZG9JbnB1dCwgdG9kb0xhYmVsLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b2RvRGV0YWlscywgdG9kb0RhdGUsIHRvZG9EZWxldGUsIFRvZG9MaXN0KSB7XG4gICAgaWYgKHRvZG9JbnB1dC5jaGVja2VkID09PSB0cnVlKSB7XG4gICAgICAgIC8vYWRkIGNsYXNzZXMgdG8gYWxsb3cgc3R5bGUgY2hhbmdlIHRocm91Z2ggQ1NTXG4gICAgICAgIHRvZG9JdGVtLmNsYXNzTGlzdC5hZGQoJ2RvbmUnKTtcbiAgICAgICAgdG9kb0xhYmVsLmNsYXNzTGlzdC5hZGQoJ2RvbmUnKTtcbiAgICAgICAgdG9kb0RldGFpbHMuY2xhc3NMaXN0LmFkZCgnZG9uZScpO1xuICAgICAgICB0b2RvRGF0ZS5jbGFzc0xpc3QuYWRkKCdkb25lJyk7XG4gICAgICAgIHRvZG9EZWxldGUuY2xhc3NMaXN0LmFkZCgnZG9uZScpO1xuICAgICAgICAvL2NoYW5nZSBcImRvbmVcIiBwcm9wZXJ0eSB0byB0cnVlXG4gICAgICAgIFRvZG9MaXN0Lm1hcmtEb25lKGl0ZW0pO1xuICAgIH0gZWxzZSBpZiAodG9kb0lucHV0LmNoZWNrZWQgPT09IGZhbHNlKSB7XG4gICAgICAgIC8vcmVtb3ZlIGNsYXNzZXMgdG8gcmVtb3ZlIHN0eWxlIGNoYW5nZSB0aHJvdWdoIENTU1xuICAgICAgICB0b2RvSXRlbS5jbGFzc0xpc3QucmVtb3ZlKCdkb25lJyk7XG4gICAgICAgIHRvZG9MYWJlbC5jbGFzc0xpc3QucmVtb3ZlKCdkb25lJyk7XG4gICAgICAgIHRvZG9EZXRhaWxzLmNsYXNzTGlzdC5yZW1vdmUoJ2RvbmUnKTtcbiAgICAgICAgdG9kb0RhdGUuY2xhc3NMaXN0LnJlbW92ZSgnZG9uZScpO1xuICAgICAgICB0b2RvRGVsZXRlLmNsYXNzTGlzdC5yZW1vdmUoJ2RvbmUnKTtcbiAgICAgICAgLy9jaGFuZ2UgXCJkb25lXCIgcHJvcGVydHkgYmFjayB0byBmYWxzZVxuICAgICAgICBUb2RvTGlzdC5tYXJrVW5kb25lKGl0ZW0pO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gbmV3VG9kb0Zvcm0oKSB7XG4gICAgY29uc3Qgc2lkZWJhciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zaWRlYmFyJyk7XG5cbiAgICAvL3ByZXZlbnQgbXVsdGlwbGUgZm9ybXMgaWYgdXNlciBjbGlja3MgXCJhZGQgdG9kb1wiIG11bHRpcGxlIHRpbWVzXG4gICAgY29uc3QgcHJldmlvdXNGb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNpZGViYXIgPiBmb3JtJyk7XG4gICAgaWYgKHByZXZpb3VzRm9ybSkge1xuICAgICAgICBwcmV2aW91c0Zvcm0ucmVtb3ZlKCk7XG4gICAgfVxuXG4gICAgY29uc3QgZm9ybSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2Zvcm0nKTtcbiAgICBzaWRlYmFyLmFwcGVuZChmb3JtKTtcblxuICAgIC8vY3JlYXRlIGxhYmVsIGZvciB0aXRsZVxuICAgIGNvbnN0IHRpdGxlTGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpO1xuICAgIHRpdGxlTGFiZWwudGV4dENvbnRlbnQgPSAnVGl0bGU6ICc7XG4gICAgdGl0bGVMYWJlbC5zZXRBdHRyaWJ1dGUoJ2ZvcicsICd0aXRsZScpO1xuICAgIGZvcm0uYXBwZW5kKHRpdGxlTGFiZWwpO1xuICAgIC8vY3JlYXRlIGlucHV0IGZvciB0aXRsZVxuICAgIGNvbnN0IHRpdGxlSW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICAgIHRpdGxlSW5wdXQudHlwZSA9ICd0ZXh0JztcbiAgICB0aXRsZUlucHV0Lm5hbWUgPSAndGl0bGUnO1xuICAgIHRpdGxlSW5wdXQuaWQgPSAndGl0bGUnO1xuICAgIGZvcm0uYXBwZW5kKHRpdGxlSW5wdXQpO1xuXG4gICAgLy9jcmVhdGUgbGFiZWwgZm9yIHByb2plY3RcbiAgICBjb25zdCBwcm9qZWN0TGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpO1xuICAgIHByb2plY3RMYWJlbC50ZXh0Q29udGVudCA9ICdQcm9qZWN0OiAnO1xuICAgIHByb2plY3RMYWJlbC5zZXRBdHRyaWJ1dGUoJ2ZvcicsICdwcm9qZWN0Jyk7XG4gICAgZm9ybS5hcHBlbmQocHJvamVjdExhYmVsKTtcbiAgICAvL2NyZWF0ZSBpbnB1dCBmb3IgcHJvamVjdFxuICAgIGNvbnN0IHByb2plY3RJbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gICAgcHJvamVjdElucHV0LnR5cGUgPSAndGV4dCc7XG4gICAgcHJvamVjdElucHV0Lm5hbWUgPSAncHJvamVjdCc7XG4gICAgcHJvamVjdElucHV0LmlkID0gJ3Byb2plY3QnO1xuICAgIGZvcm0uYXBwZW5kKHByb2plY3RJbnB1dCk7XG5cbiAgICAvL2NyZWF0ZSBsYWJlbCBmb3IgZGVzY3JpcHRpb25cbiAgICBjb25zdCBkZXNjcmlwdGlvbkxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcbiAgICBkZXNjcmlwdGlvbkxhYmVsLnRleHRDb250ZW50ID0gJ0Rlc2NyaXB0aW9uOiAnO1xuICAgIGRlc2NyaXB0aW9uTGFiZWwuc2V0QXR0cmlidXRlKCdmb3InLCAnZGVzY3JpcHRpb24nKTtcbiAgICBmb3JtLmFwcGVuZChkZXNjcmlwdGlvbkxhYmVsKTtcbiAgICAvL2NyZWF0ZSBpbnB1dCBmb3IgZGVzY3JpcHRpb25cbiAgICBjb25zdCBkZXNjcmlwdGlvbklucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcbiAgICBkZXNjcmlwdGlvbklucHV0LnR5cGUgPSAndGV4dCc7XG4gICAgZGVzY3JpcHRpb25JbnB1dC5uYW1lID0gJ2Rlc2NyaXB0aW9uJztcbiAgICBkZXNjcmlwdGlvbklucHV0LmlkID0gJ2Rlc2NyaXB0aW9uJztcbiAgICBmb3JtLmFwcGVuZChkZXNjcmlwdGlvbklucHV0KTtcblxuICAgIC8vY3JlYXRlIGxhYmVsIGZvciBkdWVkYXRlXG4gICAgY29uc3QgZHVlRGF0ZUxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcbiAgICBkdWVEYXRlTGFiZWwudGV4dENvbnRlbnQgPSAnRHVlLWRhdGU6ICc7XG4gICAgZHVlRGF0ZUxhYmVsLnNldEF0dHJpYnV0ZSgnZm9yJywgJ2R1ZWRhdGUnKTtcbiAgICBmb3JtLmFwcGVuZChkdWVEYXRlTGFiZWwpO1xuICAgIC8vY3JlYXRlIGlucHV0IGZvciBkdWVkYXRlXG4gICAgY29uc3QgZHVlRGF0ZUlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcbiAgICBkdWVEYXRlSW5wdXQudHlwZSA9ICdkYXRlJztcbiAgICBkdWVEYXRlSW5wdXQubmFtZSA9ICdkdWVkYXRlJztcbiAgICBkdWVEYXRlSW5wdXQuaWQgPSAnZHVlZGF0ZSc7XG4gICAgZm9ybS5hcHBlbmQoZHVlRGF0ZUlucHV0KTtcblxuICAgIC8vY3JlYXRlIGxhYmVsIGZvciBwcmlvcml0eVxuICAgIGNvbnN0IHByaW9yaXR5TGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpO1xuICAgIHByaW9yaXR5TGFiZWwudGV4dENvbnRlbnQgPSAnUHJpb3JpdHk6ICc7XG4gICAgcHJpb3JpdHlMYWJlbC5zZXRBdHRyaWJ1dGUoJ2ZvcicsICdwcmlvcml0eScpO1xuICAgIGZvcm0uYXBwZW5kKHByaW9yaXR5TGFiZWwpO1xuICAgIC8vY3JlYXRlIGRyb3Bkb3duIGZvciBwcmlvcml0eVxuICAgIGNvbnN0IHByaW9yaXR5RHJvcGRvd24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzZWxlY3QnKTtcbiAgICBwcmlvcml0eURyb3Bkb3duLmlkID0gJ3ByaW9yaXR5JztcbiAgICBmb3JtLmFwcGVuZChwcmlvcml0eURyb3Bkb3duKTtcbiAgICAvL2NyZWF0ZSBcImhpZ2hcIiBvcHRpb24gZm9yIGRyb3Bkb3duXG4gICAgY29uc3QgaGlnaE9wdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ29wdGlvbicpO1xuICAgIGhpZ2hPcHRpb24udmFsdWUgPSAnaGlnaCc7XG4gICAgaGlnaE9wdGlvbi50ZXh0Q29udGVudCA9ICdoaWdoJztcbiAgICBwcmlvcml0eURyb3Bkb3duLmFwcGVuZChoaWdoT3B0aW9uKTtcbiAgICAvL2NyZWF0ZSBcIm1lZGl1bVwiIG9wdGlvbiBmb3IgZHJvcGRvd25cbiAgICBjb25zdCBtZWRpdW1PcHRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdvcHRpb24nKTtcbiAgICBtZWRpdW1PcHRpb24udmFsdWUgPSAnbWVkaXVtJztcbiAgICBtZWRpdW1PcHRpb24udGV4dENvbnRlbnQgPSAnbWVkaXVtJztcbiAgICBwcmlvcml0eURyb3Bkb3duLmFwcGVuZChtZWRpdW1PcHRpb24pO1xuICAgIC8vY3JlYXRlIFwibG93XCIgb3B0aW9uIGZvciBkcm9wZG93blxuICAgIGNvbnN0IGxvd09wdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ29wdGlvbicpO1xuICAgIGxvd09wdGlvbi52YWx1ZSA9ICdsb3cnO1xuICAgIGxvd09wdGlvbi50ZXh0Q29udGVudCA9ICdsb3cnO1xuICAgIHByaW9yaXR5RHJvcGRvd24uYXBwZW5kKGxvd09wdGlvbik7XG5cbiAgICAvL2NyZWF0ZSBzdWJtaXQgYnV0dG9uIHRvIGFkZCB0b2RvIHRvIHRoZSBsaXN0XG4gICAgY29uc3Qgc3VibWl0QnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG4gICAgc3VibWl0QnV0dG9uLnR5cGUgPSAnc3VibWl0JztcbiAgICBzdWJtaXRCdXR0b24udGV4dENvbnRlbnQgPSAnU3VibWl0JztcbiAgICBmb3JtLmFwcGVuZChzdWJtaXRCdXR0b24pO1xuICAgIC8vc3VibWl0IGJ1dHRvbiB3aWxsIGFkZCB0b2RvIHRvIHRoZSB0b2RvIGxpc3RcbiAgICBzdWJtaXRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICAgIC8vcHJldmVudCBwYWdlIHJlZnJlc2hcbiAgICAgICAgcHJldmVudFJlZnJlc2goKTtcbiAgICAgICAgLy9tYWtlIHN1cmUgdXNlciBpbnB1dHMgdGl0bGUgYmVmb3JlIHN1Ym1pdHRpbmdcbiAgICAgICAgaWYoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RpdGxlJykudmFsdWUgPT09ICcnKSB7XG4gICAgICAgICAgICBhbGVydCgnUGxlYXNlIGlucHV0IHRpdGxlLicpO1xuICAgICAgICAvL21ha2Ugc3VyZSB1c2VyIGlucHV0cyBkdWVkYXRlIGJlZm9yZSBzdWJtaXR0aW5nXG4gICAgICAgIH0gZWxzZSBpZiAoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2R1ZWRhdGUnKS52YWx1ZSA9PT0gJycpIHtcbiAgICAgICAgICAgIGFsZXJ0KCdQbGVhc2UgaW5wdXQgZHVlLWRhdGUuJyk7XG4gICAgICAgIC8vaWYgYWxsIHJlcXVpcmVkIGZvcm0gZmllbGRzIGFyZSBmaWxsZWQsIGFkZCB0b2RvIGl0ZW0gdG8gdGhlIGxpc3RcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIFRvZG9MaXN0LmFkZFRvZG8oXG4gICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RpdGxlJykudmFsdWUsXG4gICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Rlc2NyaXB0aW9uJykudmFsdWUsXG4gICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2R1ZWRhdGUnKS52YWx1ZSxcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncHJpb3JpdHknKS52YWx1ZSxcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncHJvamVjdCcpLnZhbHVlLFxuICAgICAgICAgICAgKVxuICAgICAgICAgICAgLy9yZW1vdmUgZm9ybVxuICAgICAgICAgICAgZm9ybS5yZW1vdmUoKTtcbiAgICAgICAgICAgIC8vdXBkYXRlIHNjcmVlbiB0byBkaXNwbGF5IGxhdGVzdCB0b2RvIGxpc3RcbiAgICAgICAgICAgIGRpc3BsYXlBbGxMaXN0KCk7XG4gICAgICAgIH1cbiAgICB9KVxuXG4gICAgLy9jcmVhdGUgY2FuY2VsIGJ1dHRvblxuICAgIGNvbnN0IGNhbmNlbEJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICAgIGNhbmNlbEJ1dHRvbi50eXBlID0gJ3RleHQnO1xuICAgIGNhbmNlbEJ1dHRvbi50ZXh0Q29udGVudCA9ICdDYW5jZWwnO1xuICAgIGZvcm0uYXBwZW5kKGNhbmNlbEJ1dHRvbik7XG4gICAgLy9jYW5jZWwgYnV0dG9uIHdpbGwgcmVtb3ZlIGZvcm1cbiAgICBjYW5jZWxCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICAgIGZvcm0ucmVtb3ZlKCk7XG4gICAgfSlcbn1cblxuZnVuY3Rpb24gZWRpdFRvZG9Gb3JtKGl0ZW0sIGluZGV4KSB7XG4gICAgY29uc3QgZm9ybSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2Zvcm0nKTtcblxuICAgIC8vcHJldmVudCBtdWx0aXBsZSBmb3JtcyBpZiB1c2VyIGNsaWNrcyBcImRldGFpbHNcIiBtdWx0aXBsZSB0aW1lc1xuICAgIGNvbnN0IHByZXZpb3VzRm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy50b2RvLWl0ZW0gPiBmb3JtJyk7XG4gICAgaWYgKHByZXZpb3VzRm9ybSkge1xuICAgICAgICBwcmV2aW91c0Zvcm0ucmVtb3ZlKCk7XG4gICAgfVxuXG4gICAgY29uc3QgdG9kb0l0ZW0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAuJHtoeXBoZW5hdG9yKGl0ZW0udGl0bGUpfWApXG4gICAgdG9kb0l0ZW0uY2xhc3NMaXN0LmFkZCgnZWRpdCcpO1xuICAgIHRvZG9JdGVtLmFwcGVuZChmb3JtKTtcblxuICAgIC8vY3JlYXRlIGxhYmVsIGZvciB0aXRsZVxuICAgIGNvbnN0IHRpdGxlTGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpO1xuICAgIHRpdGxlTGFiZWwudGV4dENvbnRlbnQgPSAnVGl0bGU6ICc7XG4gICAgdGl0bGVMYWJlbC5zZXRBdHRyaWJ1dGUoJ2ZvcicsICd0aXRsZScpO1xuICAgIGZvcm0uYXBwZW5kKHRpdGxlTGFiZWwpO1xuICAgIC8vY3JlYXRlIGlucHV0IGZvciB0aXRsZVxuICAgIGNvbnN0IHRpdGxlSW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICAgIHRpdGxlSW5wdXQudHlwZSA9ICd0ZXh0JztcbiAgICB0aXRsZUlucHV0Lm5hbWUgPSAndGl0bGUnO1xuICAgIHRpdGxlSW5wdXQuaWQgPSAndGl0bGUnO1xuICAgIHRpdGxlSW5wdXQuc2V0QXR0cmlidXRlKCd2YWx1ZScsIGl0ZW0udGl0bGUpO1xuICAgIGZvcm0uYXBwZW5kKHRpdGxlSW5wdXQpO1xuXG4gICAgLy9jcmVhdGUgbGFiZWwgZm9yIHByb2plY3RcbiAgICBjb25zdCBwcm9qZWN0TGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpO1xuICAgIHByb2plY3RMYWJlbC50ZXh0Q29udGVudCA9ICdQcm9qZWN0OiAnO1xuICAgIHByb2plY3RMYWJlbC5zZXRBdHRyaWJ1dGUoJ2ZvcicsICdwcm9qZWN0Jyk7XG4gICAgZm9ybS5hcHBlbmQocHJvamVjdExhYmVsKTtcbiAgICAvL2NyZWF0ZSBpbnB1dCBmb3IgcHJvamVjdFxuICAgIGNvbnN0IHByb2plY3RJbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gICAgcHJvamVjdElucHV0LnR5cGUgPSAndGV4dCc7XG4gICAgcHJvamVjdElucHV0Lm5hbWUgPSAncHJvamVjdCc7XG4gICAgcHJvamVjdElucHV0LmlkID0gJ3Byb2plY3QnO1xuICAgIHByb2plY3RJbnB1dC5zZXRBdHRyaWJ1dGUoJ3ZhbHVlJywgaXRlbS5wcm9qZWN0KTtcbiAgICBmb3JtLmFwcGVuZChwcm9qZWN0SW5wdXQpO1xuXG4gICAgLy9jcmVhdGUgbGFiZWwgZm9yIGRlc2NyaXB0aW9uXG4gICAgY29uc3QgZGVzY3JpcHRpb25MYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7XG4gICAgZGVzY3JpcHRpb25MYWJlbC50ZXh0Q29udGVudCA9ICdEZXNjcmlwdGlvbjogJztcbiAgICBkZXNjcmlwdGlvbkxhYmVsLnNldEF0dHJpYnV0ZSgnZm9yJywgJ2Rlc2NyaXB0aW9uJyk7XG4gICAgZm9ybS5hcHBlbmQoZGVzY3JpcHRpb25MYWJlbCk7XG4gICAgLy9jcmVhdGUgaW5wdXQgZm9yIGRlc2NyaXB0aW9uXG4gICAgY29uc3QgZGVzY3JpcHRpb25JbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gICAgZGVzY3JpcHRpb25JbnB1dC50eXBlID0gJ3RleHQnO1xuICAgIGRlc2NyaXB0aW9uSW5wdXQubmFtZSA9ICdkZXNjcmlwdGlvbic7XG4gICAgZGVzY3JpcHRpb25JbnB1dC5pZCA9ICdkZXNjcmlwdGlvbic7XG4gICAgZGVzY3JpcHRpb25JbnB1dC5zZXRBdHRyaWJ1dGUoJ3ZhbHVlJywgaXRlbS5kZXNjcmlwdGlvbik7XG4gICAgZm9ybS5hcHBlbmQoZGVzY3JpcHRpb25JbnB1dCk7XG5cbiAgICAvL2NyZWF0ZSBsYWJlbCBmb3IgZHVlZGF0ZVxuICAgIGNvbnN0IGR1ZURhdGVMYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7XG4gICAgZHVlRGF0ZUxhYmVsLnRleHRDb250ZW50ID0gJ0R1ZS1kYXRlOiAnO1xuICAgIGR1ZURhdGVMYWJlbC5zZXRBdHRyaWJ1dGUoJ2ZvcicsICdkdWVkYXRlJyk7XG4gICAgZm9ybS5hcHBlbmQoZHVlRGF0ZUxhYmVsKTtcbiAgICAvL2NyZWF0ZSBpbnB1dCBmb3IgZHVlZGF0ZVxuICAgIGNvbnN0IGR1ZURhdGVJbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gICAgZHVlRGF0ZUlucHV0LnR5cGUgPSAnZGF0ZSc7XG4gICAgZHVlRGF0ZUlucHV0Lm5hbWUgPSAnZHVlZGF0ZSc7XG4gICAgZHVlRGF0ZUlucHV0LmlkID0gJ2R1ZWRhdGUnO1xuICAgIGR1ZURhdGVJbnB1dC5zZXRBdHRyaWJ1dGUoJ3ZhbHVlJywgaXRlbS5kdWVEYXRlKTtcbiAgICBmb3JtLmFwcGVuZChkdWVEYXRlSW5wdXQpO1xuXG4gICAgLy9jcmVhdGUgbGFiZWwgZm9yIHByaW9yaXR5XG4gICAgY29uc3QgcHJpb3JpdHlMYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7XG4gICAgcHJpb3JpdHlMYWJlbC50ZXh0Q29udGVudCA9ICdQcmlvcml0eTogJztcbiAgICBwcmlvcml0eUxhYmVsLnNldEF0dHJpYnV0ZSgnZm9yJywgJ3ByaW9yaXR5Jyk7XG4gICAgZm9ybS5hcHBlbmQocHJpb3JpdHlMYWJlbCk7XG4gICAgLy9jcmVhdGUgZHJvcGRvd24gZm9yIHByaW9yaXR5XG4gICAgY29uc3QgcHJpb3JpdHlEcm9wZG93biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NlbGVjdCcpO1xuICAgIHByaW9yaXR5RHJvcGRvd24uaWQgPSAncHJpb3JpdHknO1xuICAgIGZvcm0uYXBwZW5kKHByaW9yaXR5RHJvcGRvd24pO1xuICAgIC8vY3JlYXRlIFwiaGlnaFwiIG9wdGlvbiBmb3IgZHJvcGRvd25cbiAgICBjb25zdCBoaWdoT3B0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnb3B0aW9uJyk7XG4gICAgaGlnaE9wdGlvbi52YWx1ZSA9ICdoaWdoJztcbiAgICBoaWdoT3B0aW9uLnRleHRDb250ZW50ID0gJ2hpZ2gnO1xuICAgIHByaW9yaXR5RHJvcGRvd24uYXBwZW5kKGhpZ2hPcHRpb24pO1xuICAgIC8vY3JlYXRlIFwibWVkaXVtXCIgb3B0aW9uIGZvciBkcm9wZG93blxuICAgIGNvbnN0IG1lZGl1bU9wdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ29wdGlvbicpO1xuICAgIG1lZGl1bU9wdGlvbi52YWx1ZSA9ICdtZWRpdW0nO1xuICAgIG1lZGl1bU9wdGlvbi50ZXh0Q29udGVudCA9ICdtZWRpdW0nO1xuICAgIHByaW9yaXR5RHJvcGRvd24uYXBwZW5kKG1lZGl1bU9wdGlvbik7XG4gICAgLy9jcmVhdGUgXCJsb3dcIiBvcHRpb24gZm9yIGRyb3Bkb3duXG4gICAgY29uc3QgbG93T3B0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnb3B0aW9uJyk7XG4gICAgbG93T3B0aW9uLnZhbHVlID0gJ2xvdyc7XG4gICAgbG93T3B0aW9uLnRleHRDb250ZW50ID0gJ2xvdyc7XG4gICAgcHJpb3JpdHlEcm9wZG93bi5hcHBlbmQobG93T3B0aW9uKTtcbiAgICAvL3ByZXNlbGVjdCBwcmlvcml0eSB2YWx1ZSB0aGF0IHVzZXIgcHJldmlvdXNseSBzZXRcbiAgICBpZiAoaXRlbS5wcmlvcml0eSA9PT0gJ2hpZ2gnKSB7XG4gICAgICAgIGhpZ2hPcHRpb24uc2V0QXR0cmlidXRlKCdzZWxlY3RlZCcsICdzZWxlY3RlZCcpO1xuICAgIH0gZWxzZSBpZiAoaXRlbS5wcmlvcml0eSA9PT0gJ21lZGl1bScpIHtcbiAgICAgICAgbWVkaXVtT3B0aW9uLnNldEF0dHJpYnV0ZSgnc2VsZWN0ZWQnLCAnc2VsZWN0ZWQnKTtcbiAgICB9IGVsc2UgaWYgKGl0ZW0ucHJpb3JpdHkgPT09ICdsb3cnKSB7XG4gICAgICAgIGxvd09wdGlvbi5zZXRBdHRyaWJ1dGUoJ3NlbGVjdGVkJywgJ3NlbGVjdGVkJyk7XG4gICAgfVxuXG4gICAgLy9jcmVhdGUgc3VibWl0IGJ1dHRvbiB0byB1cGRhdGUgdG9kb1xuICAgIGNvbnN0IHN1Ym1pdEJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICAgIHN1Ym1pdEJ1dHRvbi50eXBlID0gJ3N1Ym1pdCc7XG4gICAgc3VibWl0QnV0dG9uLnRleHRDb250ZW50ID0gJ0NvbmZpcm0gRWRpdCc7XG4gICAgZm9ybS5hcHBlbmQoc3VibWl0QnV0dG9uKTtcbiAgICAvL3N1Ym1pdCBidXR0b24gd2lsbCBhZGQgdG9kbyB0byB0aGUgdG9kbyBsaXN0XG4gICAgc3VibWl0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICAvL3ByZXZlbnQgcGFnZSByZWZyZXNoXG4gICAgICAgIHByZXZlbnRSZWZyZXNoKCk7XG4gICAgICAgIC8vbWFrZSBzdXJlIHVzZXIgaW5wdXRzIHRpdGxlIGJlZm9yZSBzdWJtaXR0aW5nXG4gICAgICAgIGlmKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0aXRsZScpLnZhbHVlID09PSAnJykge1xuICAgICAgICAgICAgYWxlcnQoJ1BsZWFzZSBpbnB1dCB0aXRsZS4nKTtcbiAgICAgICAgLy9tYWtlIHN1cmUgdXNlciBpbnB1dHMgZHVlZGF0ZSBiZWZvcmUgc3VibWl0dGluZ1xuICAgICAgICB9IGVsc2UgaWYgKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkdWVkYXRlJykudmFsdWUgPT09ICcnKSB7XG4gICAgICAgICAgICBhbGVydCgnUGxlYXNlIGlucHV0IGR1ZS1kYXRlLicpO1xuICAgICAgICAvL2lmIGFsbCByZXF1aXJlZCBmb3JtIGZpZWxkcyBhcmUgZmlsbGVkLCBhZGQgdG9kbyBpdGVtIHRvIHRoZSBsaXN0XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvL3JlbW92ZSBvcmlnaW5hbCB0b2RvIGl0ZW0sIGFuZCBhZGQgbmV3IGl0ZW1cbiAgICAgICAgICAgIGxpc3Quc3BsaWNlKGluZGV4LCAxLCB7XG4gICAgICAgICAgICAgICAgdGl0bGU6IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0aXRsZScpLnZhbHVlLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZGVzY3JpcHRpb24nKS52YWx1ZSxcbiAgICAgICAgICAgICAgICBkdWVEYXRlOiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZHVlZGF0ZScpLnZhbHVlLFxuICAgICAgICAgICAgICAgIHByaW9yaXR5OiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncHJpb3JpdHknKS52YWx1ZSxcbiAgICAgICAgICAgICAgICBkb25lOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBwcm9qZWN0OiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncHJvamVjdCcpLnZhbHVlLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAvL3JlbW92ZSBmb3JtXG4gICAgICAgICAgICBmb3JtLnJlbW92ZSgpO1xuICAgICAgICAgICAgLy91cGRhdGUgc2NyZWVuIHRvIGRpc3BsYXkgbGF0ZXN0IHRvZG8gbGlzdFxuICAgICAgICAgICAgZGlzcGxheUFsbExpc3QoKTtcbiAgICAgICAgfVxuICAgIH0pXG59XG5cbi8vUHJldmVudCBmb3JtIGZyb20gcmVmcmVzaGluZyBwYWdlIHdoZW4gc3VibWl0IGJ1dHRvbiBpcyBjbGlja2VkXG5mdW5jdGlvbiBwcmV2ZW50UmVmcmVzaCgpIHtcbiAgICBjb25zdCBmb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignZm9ybScpO1xuICAgIGZvcm0uYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgZXZlbnQgPT4ge1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH0pXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBkaXNwbGF5U3R1ZHlMaXN0KCkge1xuICAgIGNvbnN0IHByb2plY3RTdHVkeSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zdHVkeScpO1xuXG4gICAgLy9yZW1vdmUgY2xhc3MgZnJvbSBwcmV2aW91c2x5IHNlbGVjdGVkIGl0ZW1cbiAgICBjb25zdCBwcmV2aW91c2x5U2VsZWN0ZWRJdGVtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNlbGVjdGVkJyk7XG4gICAgaWYgKHByZXZpb3VzbHlTZWxlY3RlZEl0ZW0pIHtcbiAgICAgICAgcHJldmlvdXNseVNlbGVjdGVkSXRlbS5jbGFzc0xpc3QucmVtb3ZlKCdzZWxlY3RlZCcpO1xuICAgIH1cbiAgICAvL2FkZCBjbGFzcyB0byBkaXYgdG8gc2hvdyB3aGVuIGl0IGlzIHNlbGVjdGVkXG4gICAgcHJvamVjdFN0dWR5LmNsYXNzTGlzdC5hZGQoJ3NlbGVjdGVkJyk7XG4gICAgLy9maWx0ZXIgdGhlIGxpc3QgZm9yIGl0ZW1zIHdpdGggXCJzdHVkeVwiIHByb2plY3RcbiAgICBjb25zdCBsaXN0U3R1ZHkgPSBsaXN0LmZpbHRlcigodG9kbykgPT4gdG9kby5wcm9qZWN0ID09PSAnc3R1ZHknKTtcbiAgICAvL2NsZWFyIHRvZG8gbGlzdFxuICAgIGNvbnRhaW5lci50ZXh0Q29udGVudCA9ICcnO1xuICAgIC8vcmVuZGVyIHRvZG8gaXRlbXNcbiAgICBsaXN0U3R1ZHkuZm9yRWFjaCgoaXRlbSwgaW5kZXgpID0+IHtcbiAgICAgICAgLy9jcmVhdGUgc3ViLWNvbnRhaW5lciBkaXZcbiAgICAgICAgY29uc3QgdG9kb0l0ZW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgdG9kb0l0ZW0uY2xhc3NMaXN0LmFkZCgndG9kby1pdGVtJyk7XG4gICAgICAgIHRvZG9JdGVtLmNsYXNzTGlzdC5hZGQoaHlwaGVuYXRvcihpdGVtLnRpdGxlKSk7XG4gICAgICAgIC8vYWRkIGNsYXNzIHRvIHNlbGVjdCBpdGVtcyB0byBjaGFuZ2UgYm9yZGVyIGNvbG9yIGJhc2VkIG9uIHByaW9yaXR5XG4gICAgICAgIGlmIChpdGVtLnByaW9yaXR5ID09PSAnaGlnaCcpIHtcbiAgICAgICAgICAgIHRvZG9JdGVtLmNsYXNzTGlzdC5hZGQoJ2hpZ2gnKTtcbiAgICAgICAgfSBlbHNlIGlmIChpdGVtLnByaW9yaXR5ID09PSAnbWVkaXVtJykge1xuICAgICAgICAgICAgdG9kb0l0ZW0uY2xhc3NMaXN0LmFkZCgnbWVkaXVtJyk7XG4gICAgICAgIH0gZWxzZSBpZiAoaXRlbS5wcmlvcml0eSA9PT0gJ2xvdycpIHtcbiAgICAgICAgICAgIHRvZG9JdGVtLmNsYXNzTGlzdC5hZGQoJ2xvdycpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnRhaW5lci5hcHBlbmQodG9kb0l0ZW0pO1xuICAgICAgICAvL2lmIGl0ZW0gd2FzIG1hcmtlZCBkb25lLCBtYWtlIHN1cmUgdG8gcmVmbGVjdCB0aGF0XG4gICAgICAgIGlmIChpdGVtLmRvbmUgPT09IHRydWUpIHtcbiAgICAgICAgICAgIHRvZG9JdGVtLmNsYXNzTGlzdC5hZGQoJ2RvbmUnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vY3JlYXRlIHN1Yi1zdWItY29udGFpbmVyIGRpdlxuICAgICAgICBjb25zdCBsZWZ0RGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIGxlZnREaXYuY2xhc3NMaXN0LmFkZCgndG9kby1sZWZ0Jyk7XG4gICAgICAgIHRvZG9JdGVtLmFwcGVuZChsZWZ0RGl2KTtcbiAgICAgICAgLy9jcmVhdGUgbGFiZWxcbiAgICAgICAgY29uc3QgdG9kb0xhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcbiAgICAgICAgdG9kb0xhYmVsLnRleHRDb250ZW50ID0gaXRlbS50aXRsZTtcbiAgICAgICAgdG9kb0xhYmVsLnNldEF0dHJpYnV0ZSgnZm9yJywgaHlwaGVuYXRvcihpdGVtLnRpdGxlKSk7XG4gICAgICAgIGxlZnREaXYuYXBwZW5kKHRvZG9MYWJlbCk7XG4gICAgICAgIC8vaWYgaXRlbSB3YXMgbWFya2VkIGRvbmUsIG1ha2Ugc3VyZSB0byByZWZsZWN0IHRoYXRcbiAgICAgICAgaWYgKGl0ZW0uZG9uZSA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgdG9kb0xhYmVsLmNsYXNzTGlzdC5hZGQoJ2RvbmUnKTtcbiAgICAgICAgfVxuICAgIFxuICAgICAgICAvL2NyZWF0ZSBzdWItc3ViLWNvbnRhaW5lciBkaXZcbiAgICAgICAgY29uc3QgcmlnaHREaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgcmlnaHREaXYuY2xhc3NMaXN0LmFkZCgndG9kby1yaWdodCcpO1xuICAgICAgICB0b2RvSXRlbS5hcHBlbmQocmlnaHREaXYpO1xuICAgICAgICAvL2NyZWF0ZSBkaXYgdG8gc2hvdyBkYXRlXG4gICAgICAgIGNvbnN0IHRvZG9EYXRlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIHRvZG9EYXRlLnRleHRDb250ZW50ID0gaXRlbS5kdWVEYXRlO1xuICAgICAgICByaWdodERpdi5hcHBlbmQodG9kb0RhdGUpO1xuICAgICAgICAvL2lmIGl0ZW0gd2FzIG1hcmtlZCBkb25lLCBtYWtlIHN1cmUgdG8gcmVmbGVjdCB0aGF0XG4gICAgICAgIGlmIChpdGVtLmRvbmUgPT09IHRydWUpIHtcbiAgICAgICAgICAgIHRvZG9EYXRlLmNsYXNzTGlzdC5hZGQoJ2RvbmUnKTtcbiAgICAgICAgfVxuICAgIH0pXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBkaXNwbGF5R3ltTGlzdCgpIHtcbiAgICBjb25zdCBwcm9qZWN0R3ltID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmd5bScpO1xuXG4gICAgLy9yZW1vdmUgY2xhc3MgZnJvbSBwcmV2aW91c2x5IHNlbGVjdGVkIGl0ZW1cbiAgICBjb25zdCBwcmV2aW91c2x5U2VsZWN0ZWRJdGVtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNlbGVjdGVkJyk7XG4gICAgaWYgKHByZXZpb3VzbHlTZWxlY3RlZEl0ZW0pIHtcbiAgICAgICAgcHJldmlvdXNseVNlbGVjdGVkSXRlbS5jbGFzc0xpc3QucmVtb3ZlKCdzZWxlY3RlZCcpO1xuICAgIH1cbiAgICAvL2FkZCBjbGFzcyB0byBkaXYgdG8gc2hvdyB3aGVuIGl0IGlzIHNlbGVjdGVkXG4gICAgcHJvamVjdEd5bS5jbGFzc0xpc3QuYWRkKCdzZWxlY3RlZCcpO1xuICAgIC8vZmlsdGVyIHRoZSBsaXN0IGZvciBpdGVtcyB3aXRoIFwic3R1ZHlcIiBwcm9qZWN0XG4gICAgY29uc3QgbGlzdEd5bSA9IGxpc3QuZmlsdGVyKCh0b2RvKSA9PiB0b2RvLnByb2plY3QgPT09ICdneW0nKTtcbiAgICAvL2NsZWFyIHRvZG8gbGlzdFxuICAgIGNvbnRhaW5lci50ZXh0Q29udGVudCA9ICcnO1xuICAgIC8vcmVuZGVyIHRvZG8gaXRlbXNcbiAgICBsaXN0R3ltLmZvckVhY2goKGl0ZW0sIGluZGV4KSA9PiB7XG4gICAgICAgIC8vY3JlYXRlIHN1Yi1jb250YWluZXIgZGl2XG4gICAgICAgIGNvbnN0IHRvZG9JdGVtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIHRvZG9JdGVtLmNsYXNzTGlzdC5hZGQoJ3RvZG8taXRlbScpO1xuICAgICAgICB0b2RvSXRlbS5jbGFzc0xpc3QuYWRkKGh5cGhlbmF0b3IoaXRlbS50aXRsZSkpO1xuICAgICAgICAvL2FkZCBjbGFzcyB0byBzZWxlY3QgaXRlbXMgdG8gY2hhbmdlIGJvcmRlciBjb2xvciBiYXNlZCBvbiBwcmlvcml0eVxuICAgICAgICBpZiAoaXRlbS5wcmlvcml0eSA9PT0gJ2hpZ2gnKSB7XG4gICAgICAgICAgICB0b2RvSXRlbS5jbGFzc0xpc3QuYWRkKCdoaWdoJyk7XG4gICAgICAgIH0gZWxzZSBpZiAoaXRlbS5wcmlvcml0eSA9PT0gJ21lZGl1bScpIHtcbiAgICAgICAgICAgIHRvZG9JdGVtLmNsYXNzTGlzdC5hZGQoJ21lZGl1bScpO1xuICAgICAgICB9IGVsc2UgaWYgKGl0ZW0ucHJpb3JpdHkgPT09ICdsb3cnKSB7XG4gICAgICAgICAgICB0b2RvSXRlbS5jbGFzc0xpc3QuYWRkKCdsb3cnKTtcbiAgICAgICAgfVxuICAgICAgICBjb250YWluZXIuYXBwZW5kKHRvZG9JdGVtKTtcbiAgICAgICAgLy9pZiBpdGVtIHdhcyBtYXJrZWQgZG9uZSwgbWFrZSBzdXJlIHRvIHJlZmxlY3QgdGhhdFxuICAgICAgICBpZiAoaXRlbS5kb25lID09PSB0cnVlKSB7XG4gICAgICAgICAgICB0b2RvSXRlbS5jbGFzc0xpc3QuYWRkKCdkb25lJyk7XG4gICAgICAgIH1cblxuICAgICAgICAvL2NyZWF0ZSBzdWItc3ViLWNvbnRhaW5lciBkaXZcbiAgICAgICAgY29uc3QgbGVmdERpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICBsZWZ0RGl2LmNsYXNzTGlzdC5hZGQoJ3RvZG8tbGVmdCcpO1xuICAgICAgICB0b2RvSXRlbS5hcHBlbmQobGVmdERpdik7XG4gICAgICAgIC8vY3JlYXRlIGxhYmVsXG4gICAgICAgIGNvbnN0IHRvZG9MYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7XG4gICAgICAgIHRvZG9MYWJlbC50ZXh0Q29udGVudCA9IGl0ZW0udGl0bGU7XG4gICAgICAgIHRvZG9MYWJlbC5zZXRBdHRyaWJ1dGUoJ2ZvcicsIGh5cGhlbmF0b3IoaXRlbS50aXRsZSkpO1xuICAgICAgICBsZWZ0RGl2LmFwcGVuZCh0b2RvTGFiZWwpO1xuICAgICAgICAvL2lmIGl0ZW0gd2FzIG1hcmtlZCBkb25lLCBtYWtlIHN1cmUgdG8gcmVmbGVjdCB0aGF0XG4gICAgICAgIGlmIChpdGVtLmRvbmUgPT09IHRydWUpIHtcbiAgICAgICAgICAgIHRvZG9MYWJlbC5jbGFzc0xpc3QuYWRkKCdkb25lJyk7XG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgLy9jcmVhdGUgc3ViLXN1Yi1jb250YWluZXIgZGl2XG4gICAgICAgIGNvbnN0IHJpZ2h0RGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIHJpZ2h0RGl2LmNsYXNzTGlzdC5hZGQoJ3RvZG8tcmlnaHQnKTtcbiAgICAgICAgdG9kb0l0ZW0uYXBwZW5kKHJpZ2h0RGl2KTtcbiAgICAgICAgLy9jcmVhdGUgZGl2IHRvIHNob3cgZGF0ZVxuICAgICAgICBjb25zdCB0b2RvRGF0ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICB0b2RvRGF0ZS50ZXh0Q29udGVudCA9IGl0ZW0uZHVlRGF0ZTtcbiAgICAgICAgcmlnaHREaXYuYXBwZW5kKHRvZG9EYXRlKTtcbiAgICAgICAgLy9pZiBpdGVtIHdhcyBtYXJrZWQgZG9uZSwgbWFrZSBzdXJlIHRvIHJlZmxlY3QgdGhhdFxuICAgICAgICBpZiAoaXRlbS5kb25lID09PSB0cnVlKSB7XG4gICAgICAgICAgICB0b2RvRGF0ZS5jbGFzc0xpc3QuYWRkKCdkb25lJyk7XG4gICAgICAgIH1cbiAgICB9KVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZGlzcGxheUFsbExpc3QoKSB7XG4gICAgY29uc3QgcHJvamVjdEFsbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hbGwnKTtcblxuICAgIC8vcmVtb3ZlIGNsYXNzIGZyb20gcHJldmlvdXNseSBzZWxlY3RlZCBpdGVtXG4gICAgY29uc3QgcHJldmlvdXNseVNlbGVjdGVkSXRlbSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zZWxlY3RlZCcpO1xuICAgIGlmIChwcmV2aW91c2x5U2VsZWN0ZWRJdGVtKSB7XG4gICAgICAgIHByZXZpb3VzbHlTZWxlY3RlZEl0ZW0uY2xhc3NMaXN0LnJlbW92ZSgnc2VsZWN0ZWQnKTtcbiAgICB9XG4gICAgLy9hZGQgY2xhc3MgdG8gZGl2IHRvIHNob3cgd2hlbiBpdCBpcyBzZWxlY3RlZFxuICAgIHByb2plY3RBbGwuY2xhc3NMaXN0LmFkZCgnc2VsZWN0ZWQnKTtcbiAgICAvL2Rpc3BsYXkgYWxsIGl0ZW1zXG4gICAgRGlzcGxheVRvZG9MaXN0KGxpc3QpO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFRvZG9MaXN0KCkge1xuICAgIC8vQXJyYXkgdG8gc3RvcmUgdG9kbyBpdGVtc1xuICAgIGNvbnN0IGxpc3QgPSBbXG4gICAgICAgIC8vVG9kbyBsaXN0IHdpdGggZGVmYXVsdCBpdGVtc1xuICAgICAgICB7XG4gICAgICAgICAgICB0aXRsZTogJ2xlYXJuIHdlYmtpdCcsXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogJycsXG4gICAgICAgICAgICBkdWVEYXRlOiAnMjAyMy0xMC0zMCcsXG4gICAgICAgICAgICBwcmlvcml0eTogJ2hpZ2gnLFxuICAgICAgICAgICAgZG9uZTogZmFsc2UsXG4gICAgICAgICAgICBwcm9qZWN0OiAnc3R1ZHknLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICB0aXRsZTogJ2pvZycsXG4gICAgICAgICAgICBwcm9qZWN0OiAnZ3ltJyxcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiAnMTAgbWlsZXMnLFxuICAgICAgICAgICAgZHVlRGF0ZTogJzIwMjMtMTAtMzEnLFxuICAgICAgICAgICAgcHJpb3JpdHk6ICdtZWRpdW0nLFxuICAgICAgICAgICAgZG9uZTogZmFsc2UsXG4gICAgICAgICAgICBwcm9qZWN0OiAnZ3ltJyxcbiAgICAgICAgfVxuICAgIF07XG5cbiAgICBjb25zdCBnZXRMaXN0ID0gKCkgPT4gbGlzdDtcblxuICAgIC8vRnVuY3Rpb24gdG8gYWRkIGl0ZW1zIHRvIGxpc3RcbiAgICBjb25zdCBhZGRUb2RvID0gKHRpdGxlLCBkZXNjcmlwdGlvbiwgZHVlRGF0ZSwgcHJpb3JpdHksIHByb2plY3QpID0+IHtcbiAgICAgICAgbGlzdC5wdXNoKFRvZG9JdGVtKHRpdGxlLCBkZXNjcmlwdGlvbiwgZHVlRGF0ZSwgcHJpb3JpdHksIHByb2plY3QpKTtcbiAgICB9XG5cbiAgICAvL0tlZXAgdHJhY2sgb2Ygd2hldGhlciB0YXNrcyBhcmUgY29tcGxldGVkXG4gICAgY29uc3QgbWFya0RvbmUgPSAoKHRvZG8pID0+IHRvZG8uZG9uZSA9IHRydWUpO1xuICAgIGNvbnN0IG1hcmtVbmRvbmUgPSAoKHRvZG8pID0+IHRvZG8uZG9uZSA9IGZhbHNlKTtcblxuICAgIHJldHVybiB7IGdldExpc3QsIGFkZFRvZG8sIG1hcmtEb25lLCBtYXJrVW5kb25lIH07XG59XG5cbmZ1bmN0aW9uIFRvZG9JdGVtKHRvZG9UaXRsZSwgdG9kb0Rlc2NyaXB0aW9uLCB0b2RvRHVlRGF0ZSwgdG9kb1ByaW9yaXR5LFxuICAgICAgICAgICAgICAgICAgICB0b2RvUHJvamVjdCA9ICcnKSB7XG4gICAgY29uc3QgdGl0bGUgPSB0b2RvVGl0bGU7XG4gICAgY29uc3QgZGVzY3JpcHRpb24gPSB0b2RvRGVzY3JpcHRpb247XG4gICAgY29uc3QgZHVlRGF0ZSA9IHRvZG9EdWVEYXRlO1xuICAgIGNvbnN0IHByaW9yaXR5ID0gdG9kb1ByaW9yaXR5O1xuICAgIGNvbnN0IGRvbmUgPSBmYWxzZTtcbiAgICBjb25zdCBwcm9qZWN0ID0gdG9kb1Byb2plY3Q7XG5cbiAgICByZXR1cm4geyB0aXRsZSwgZGVzY3JpcHRpb24sIGR1ZURhdGUsIHByaW9yaXR5LCBkb25lLCBwcm9qZWN0IH07XG59IiwiaW1wb3J0ICcuL3N0eWxlLmNzcyc7XG5pbXBvcnQgeyBkaXNwbGF5QWxsTGlzdCwgZGlzcGxheVN0dWR5TGlzdCwgZGlzcGxheUd5bUxpc3QsXG4gICAgICAgICAgICBhZGRUb2RvQnV0dG9uIH0gZnJvbSAnLi90b2RvLWxpc3QtZnVuY3Rpb25zLmpzJztcblxuLy9pbml0aWFsIHJlbmRlclxuZGlzcGxheUFsbExpc3QoKTtcbmFkZFRvZG9CdXR0b24oKTtcbi8vbWFrZSBcImFsbFwiIGRpdiBzaG93IGFsbCBwcm9qZWN0cyB3aGVuIGNsaWNrZWRcbmNvbnN0IHByb2plY3RBbGwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYWxsJyk7XG5wcm9qZWN0QWxsLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgIGRpc3BsYXlBbGxMaXN0KCk7XG59KVxuLy9tYWtlIFwic3R1ZHlcIiBkaXYgc2hvdyBhbGwgZ3ltIHByb2plY3RzIHdoZW4gY2xpY2tlZFxuY29uc3QgcHJvamVjdFN0dWR5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnN0dWR5Jyk7XG5wcm9qZWN0U3R1ZHkuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgZGlzcGxheVN0dWR5TGlzdCgpO1xufSlcbi8vbWFrZSBcImd5bVwiIGRpdiBzaG93IGFsbCBzdHVkeSBwcm9qZWN0cyB3aGVuIGNsaWNrZWRcbmNvbnN0IHByb2plY3RHeW0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZ3ltJyk7XG5wcm9qZWN0R3ltLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgIGRpc3BsYXlHeW1MaXN0KCk7XG59KSJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwiY29uY2F0IiwibGVuZ3RoIiwiam9pbiIsImkiLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsIm9wdGlvbnMiLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwibWVtbyIsImluc2VydCIsInN0eWxlIiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ3aW5kb3ciLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwiZ2V0VGFyZ2V0IiwiRXJyb3IiLCJhcHBlbmRDaGlsZCIsImVsZW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlcyIsImF0dHJpYnV0ZXMiLCJzdHlsZUVsZW1lbnQiLCJub25jZSIsInNldEF0dHJpYnV0ZSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlVGFnVHJhbnNmb3JtIiwiYXBwbHkiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImZpcnN0Q2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJuIiwiZ2V0dGVyIiwiX19lc01vZHVsZSIsImQiLCJhIiwiZGVmaW5pdGlvbiIsImtleSIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwibmMiLCJsb2NhbHMiLCJ0aXRsZSIsImRlc2NyaXB0aW9uIiwiZHVlRGF0ZSIsInByaW9yaXR5IiwiZG9uZSIsInByb2plY3QiLCJnZXRMaXN0IiwiYWRkVG9kbyIsInRvZG9UaXRsZSIsInRvZG9EZXNjcmlwdGlvbiIsInRvZG9EdWVEYXRlIiwidG9kb1ByaW9yaXR5IiwidG9kb1Byb2plY3QiLCJUb2RvSXRlbSIsIm1hcmtEb25lIiwidG9kbyIsIm1hcmtVbmRvbmUiLCJib2R5IiwiY29udGFpbmVyIiwiRGlzcGxheVRvZG9MaXN0IiwibCIsInRleHRDb250ZW50IiwiZm9yRWFjaCIsInRvZG9JdGVtIiwiY2xhc3NMaXN0IiwiYWRkIiwiaHlwaGVuYXRvciIsImFwcGVuZCIsImxlZnREaXYiLCJ0b2RvSW5wdXQiLCJhZGRFdmVudExpc3RlbmVyIiwidG9kb0xhYmVsIiwidG9kb0RldGFpbHMiLCJ0b2RvRGF0ZSIsInRvZG9EZWxldGUiLCJUb2RvTGlzdCIsImNoZWNrZWQiLCJ0b2RvQ29tcGxldGUiLCJyaWdodERpdiIsImZvcm0iLCJwcmV2aW91c0Zvcm0iLCJ0aXRsZUxhYmVsIiwidGl0bGVJbnB1dCIsInR5cGUiLCJuYW1lIiwicHJvamVjdExhYmVsIiwicHJvamVjdElucHV0IiwiZGVzY3JpcHRpb25MYWJlbCIsImRlc2NyaXB0aW9uSW5wdXQiLCJkdWVEYXRlTGFiZWwiLCJkdWVEYXRlSW5wdXQiLCJwcmlvcml0eUxhYmVsIiwicHJpb3JpdHlEcm9wZG93biIsImhpZ2hPcHRpb24iLCJ2YWx1ZSIsIm1lZGl1bU9wdGlvbiIsImxvd09wdGlvbiIsInN1Ym1pdEJ1dHRvbiIsInByZXZlbnRSZWZyZXNoIiwiZ2V0RWxlbWVudEJ5SWQiLCJhbGVydCIsImRpc3BsYXlBbGxMaXN0IiwiZWRpdFRvZG9Gb3JtIiwic3RyaW5nIiwic3BsaXQiLCJldmVudCIsInByZXZlbnREZWZhdWx0IiwicHJvamVjdEFsbCIsInByZXZpb3VzbHlTZWxlY3RlZEl0ZW0iLCJzaWRlYmFyIiwidG9kb0J1dHRvbiIsImNhbmNlbEJ1dHRvbiIsIm5ld1RvZG9Gb3JtIiwiYWRkVG9kb0J1dHRvbiIsInByb2plY3RTdHVkeSIsImxpc3RTdHVkeSIsImZpbHRlciIsImRpc3BsYXlTdHVkeUxpc3QiLCJwcm9qZWN0R3ltIiwibGlzdEd5bSIsImRpc3BsYXlHeW1MaXN0Il0sInNvdXJjZVJvb3QiOiIifQ==