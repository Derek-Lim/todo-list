(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>r});var o=n(537),d=n.n(o),i=n(645),a=n.n(i)()(d());a.push([e.id,"body {\n    display: grid;\n    grid-template: 100px 650px / 1fr 3fr;\n    gap: 10px;\n}\n\nheader {\n    grid-area: 1 / 1 / 2 / 3;\n    font-size: 50px;\n    background-color: lightpink;\n    padding: 20px;\n    text-align: center;\n    border: 3px solid black;\n}\n\ndiv.sidebar {\n    grid-area: 2 / 1 / 3 / 2;\n    font-size: 30px;\n    background-color: aliceblue;\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    align-items: center;\n    border: 3px solid black;\n}\n\n.sidebar > .selected {\n    font-weight: 900;\n}\n\n.add-todo-button {\n    border-radius: 10px;\n    font-size: 20px;\n}\n\ndiv.todo-list {\n    grid-area: 2 / 2 / 3 / 3;\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n}\n\ndiv.todo-item {\n    display: flex;\n    justify-content: space-between;\n    background-color: lightgrey;\n    color: black;\n    padding: 10px;\n}\n\ndiv.todo-item.high {\n    border: 2px solid red;\n}\n\ndiv.todo-item.medium {\n    border: 2px solid orange;\n}\n\ndiv.todo-item.low {\n    border: 2px solid yellow;\n}\n\ndiv.todo-item > div {\n    display: flex;\n    gap: 20px;\n}\n\ndiv.todo-item .done {\n    color: grey;\n}\n\ndiv.todo-item label.done {\n    text-decoration: line-through;\n}\n\nform {\n    font-size: 20px;\n    border: 1px solid black;\n    width: max(150px, 85%);\n    display: flex;\n    flex-direction: column;\n    margin: 10px;\n    padding: 10px;\n    gap: 10px;\n}\n\ndiv.edit {\n    display: grid;\n    gap: 0px 150px;\n    grid-template-columns: 200px 1fr;\n    grid-template-rows: 1fr;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,oCAAoC;IACpC,SAAS;AACb;;AAEA;IACI,wBAAwB;IACxB,eAAe;IACf,2BAA2B;IAC3B,aAAa;IACb,kBAAkB;IAClB,uBAAuB;AAC3B;;AAEA;IACI,wBAAwB;IACxB,eAAe;IACf,2BAA2B;IAC3B,aAAa;IACb,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,mBAAmB;IACnB,uBAAuB;AAC3B;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,mBAAmB;IACnB,eAAe;AACnB;;AAEA;IACI,wBAAwB;IACxB,aAAa;IACb,sBAAsB;IACtB,QAAQ;AACZ;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,2BAA2B;IAC3B,YAAY;IACZ,aAAa;AACjB;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,wBAAwB;AAC5B;;AAEA;IACI,wBAAwB;AAC5B;;AAEA;IACI,aAAa;IACb,SAAS;AACb;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,6BAA6B;AACjC;;AAEA;IACI,eAAe;IACf,uBAAuB;IACvB,sBAAsB;IACtB,aAAa;IACb,sBAAsB;IACtB,YAAY;IACZ,aAAa;IACb,SAAS;AACb;;AAEA;IACI,aAAa;IACb,cAAc;IACd,gCAAgC;IAChC,uBAAuB;AAC3B",sourcesContent:["body {\n    display: grid;\n    grid-template: 100px 650px / 1fr 3fr;\n    gap: 10px;\n}\n\nheader {\n    grid-area: 1 / 1 / 2 / 3;\n    font-size: 50px;\n    background-color: lightpink;\n    padding: 20px;\n    text-align: center;\n    border: 3px solid black;\n}\n\ndiv.sidebar {\n    grid-area: 2 / 1 / 3 / 2;\n    font-size: 30px;\n    background-color: aliceblue;\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    align-items: center;\n    border: 3px solid black;\n}\n\n.sidebar > .selected {\n    font-weight: 900;\n}\n\n.add-todo-button {\n    border-radius: 10px;\n    font-size: 20px;\n}\n\ndiv.todo-list {\n    grid-area: 2 / 2 / 3 / 3;\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n}\n\ndiv.todo-item {\n    display: flex;\n    justify-content: space-between;\n    background-color: lightgrey;\n    color: black;\n    padding: 10px;\n}\n\ndiv.todo-item.high {\n    border: 2px solid red;\n}\n\ndiv.todo-item.medium {\n    border: 2px solid orange;\n}\n\ndiv.todo-item.low {\n    border: 2px solid yellow;\n}\n\ndiv.todo-item > div {\n    display: flex;\n    gap: 20px;\n}\n\ndiv.todo-item .done {\n    color: grey;\n}\n\ndiv.todo-item label.done {\n    text-decoration: line-through;\n}\n\nform {\n    font-size: 20px;\n    border: 1px solid black;\n    width: max(150px, 85%);\n    display: flex;\n    flex-direction: column;\n    margin: 10px;\n    padding: 10px;\n    gap: 10px;\n}\n\ndiv.edit {\n    display: grid;\n    gap: 0px 150px;\n    grid-template-columns: 200px 1fr;\n    grid-template-rows: 1fr;\n}"],sourceRoot:""}]);const r=a},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,d,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var r=0;r<this.length;r++){var c=this[r][0];null!=c&&(a[c]=!0)}for(var s=0;s<e.length;s++){var l=[].concat(e[s]);o&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),d&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=d):l[4]="".concat(d)),t.push(l))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),d="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(d," */");return[t].concat([i]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var i={},a=[],r=0;r<e.length;r++){var c=e[r],s=o.base?c[0]+o.base:c[0],l=i[s]||0,p="".concat(s," ").concat(l);i[s]=l+1;var u=n(p),m={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)t[u].references++,t[u].updater(m);else{var A=d(m,o);o.byIndex=r,t.splice(r,0,{identifier:p,updater:A,references:1})}a.push(p)}return a}function d(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,d){var i=o(e=e||[],d=d||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var r=n(i[a]);t[r].references--}for(var c=o(e,d),s=0;s<i.length;s++){var l=n(i[s]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}i=c}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var d=void 0!==n.layer;d&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,d&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var d=t[o];if(void 0!==d)return d.exports;var i=t[o]={id:o,exports:{}};return e[o](i,i.exports,n),i.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{var e=n(379),t=n.n(e),o=n(795),d=n.n(o),i=n(569),a=n.n(i),r=n(565),c=n.n(r),s=n(216),l=n.n(s),p=n(589),u=n.n(p),m=n(426),A={};A.styleTagTransform=u(),A.setAttributes=c(),A.insert=a().bind(null,"head"),A.domAPI=d(),A.insertStyleElement=l(),t()(m.Z,A),m.Z&&m.Z.locals&&m.Z.locals;const f=function(){const e=[{title:"learn webkit",description:"",dueDate:"2023-10-30",priority:"high",done:!1,project:"study"},{title:"jog",project:"gym",description:"10 miles",dueDate:"2023-10-31",priority:"medium",done:!1,project:"gym"}];return{getList:()=>e,addTodo:(t,n,o,d,i)=>{e.push(function(e,t,n,o,d=""){return{title:e,description:t,dueDate:n,priority:o,done:!1,project:d}}(t,n,o,d,i))},markDone:e=>e.done=!0,markUndone:e=>e.done=!1}}(),v=f.getList(),x=document.querySelector("body"),y=document.createElement("div");function b(e){y.textContent="",e.forEach(((t,n)=>{const o=document.createElement("div");o.classList.add("todo-item"),o.classList.add(g(t.title)),"high"===t.priority?o.classList.add("high"):"medium"===t.priority?o.classList.add("medium"):"low"===t.priority&&o.classList.add("low"),y.append(o),!0===t.done&&o.classList.add("done");const d=document.createElement("div");d.classList.add("todo-left"),o.append(d);const i=document.createElement("input");i.setAttribute("type","checkbox"),i.setAttribute("id",g(t.title)),i.setAttribute("name",g(t.title)),i.addEventListener("click",(()=>{!function(e,t,n,o,d,i,a,r){!0===n.checked?(t.classList.add("done"),o.classList.add("done"),d.classList.add("done"),i.classList.add("done"),a.classList.add("done"),r.markDone(e)):!1===n.checked&&(t.classList.remove("done"),o.classList.remove("done"),d.classList.remove("done"),i.classList.remove("done"),a.classList.remove("done"),r.markUndone(e))}(t,o,i,a,c,s,l,f)})),d.append(i),!0===t.done&&(i.checked=!0);const a=document.createElement("label");a.textContent=t.title,a.setAttribute("for",g(t.title)),d.append(a),!0===t.done&&a.classList.add("done");const r=document.createElement("div");r.classList.add("todo-right"),o.append(r);const c=document.createElement("button");c.classList.add("details"),c.textContent="Details",c.addEventListener("click",(()=>{!function(e,t){const n=document.createElement("form"),o=document.querySelector(".todo-item > form");o&&o.remove();const d=document.querySelector(`.${g(e.title)}`);d.classList.add("edit"),d.append(n);const i=document.createElement("label");i.textContent="Title: ",i.setAttribute("for","title"),n.append(i);const a=document.createElement("input");a.type="text",a.name="title",a.id="title",a.setAttribute("value",e.title),n.append(a);const r=document.createElement("label");r.textContent="Project: ",r.setAttribute("for","project"),n.append(r);const c=document.createElement("input");c.type="text",c.name="project",c.id="project",c.setAttribute("value",e.project),n.append(c);const s=document.createElement("label");s.textContent="Description: ",s.setAttribute("for","description"),n.append(s);const l=document.createElement("input");l.type="text",l.name="description",l.id="description",l.setAttribute("value",e.description),n.append(l);const p=document.createElement("label");p.textContent="Due-date: ",p.setAttribute("for","duedate"),n.append(p);const u=document.createElement("input");u.type="date",u.name="duedate",u.id="duedate",u.setAttribute("value",e.dueDate),n.append(u);const m=document.createElement("label");m.textContent="Priority: ",m.setAttribute("for","priority"),n.append(m);const A=document.createElement("select");A.id="priority",n.append(A);const f=document.createElement("option");f.value="high",f.textContent="high",A.append(f);const x=document.createElement("option");x.value="medium",x.textContent="medium",A.append(x);const y=document.createElement("option");y.value="low",y.textContent="low",A.append(y),"high"===e.priority?f.setAttribute("selected","selected"):"medium"===e.priority?x.setAttribute("selected","selected"):"low"===e.priority&&y.setAttribute("selected","selected");const b=document.createElement("button");b.type="submit",b.textContent="Confirm Edit",n.append(b),b.addEventListener("click",(()=>{C(),""===document.getElementById("title").value?alert("Please input title."):""===document.getElementById("duedate").value?alert("Please input due-date."):(v.splice(t,1,{title:document.getElementById("title").value,description:document.getElementById("description").value,dueDate:document.getElementById("duedate").value,priority:document.getElementById("priority").value,done:!1,project:document.getElementById("project").value}),n.remove(),E())}))}(t,n)})),r.append(c),!0===t.done&&c.classList.add("done");const s=document.createElement("div");s.textContent=t.dueDate,r.append(s),!0===t.done&&s.classList.add("done");const l=document.createElement("button");l.classList.add("delete"),l.textContent="Delete",l.addEventListener("click",(()=>{e.splice(n,1),b(e)})),r.append(l),!0===t.done&&l.classList.add("done")}))}y.classList.add("todo-list"),x.append(y);const g=e=>e.split(" ").join("-");function C(){document.querySelector("form").addEventListener("submit",(e=>{e.preventDefault()}))}function E(){const e=document.querySelector(".all"),t=document.querySelector(".selected");t&&t.classList.remove("selected"),e.classList.add("selected"),b(v)}E(),function(){const e=document.querySelector(".sidebar"),t=document.createElement("button");t.classList.add("add-todo-button"),t.textContent="Add Todo",t.addEventListener("click",(()=>{!function(){const e=document.querySelector(".sidebar"),t=document.querySelector(".sidebar > form");t&&t.remove();const n=document.createElement("form");e.append(n);const o=document.createElement("label");o.textContent="Title: ",o.setAttribute("for","title"),n.append(o);const d=document.createElement("input");d.type="text",d.name="title",d.id="title",n.append(d);const i=document.createElement("label");i.textContent="Project: ",i.setAttribute("for","project"),n.append(i);const a=document.createElement("input");a.type="text",a.name="project",a.id="project",n.append(a);const r=document.createElement("label");r.textContent="Description: ",r.setAttribute("for","description"),n.append(r);const c=document.createElement("input");c.type="text",c.name="description",c.id="description",n.append(c);const s=document.createElement("label");s.textContent="Due-date: ",s.setAttribute("for","duedate"),n.append(s);const l=document.createElement("input");l.type="date",l.name="duedate",l.id="duedate",n.append(l);const p=document.createElement("label");p.textContent="Priority: ",p.setAttribute("for","priority"),n.append(p);const u=document.createElement("select");u.id="priority",n.append(u);const m=document.createElement("option");m.value="high",m.textContent="high",u.append(m);const A=document.createElement("option");A.value="medium",A.textContent="medium",u.append(A);const v=document.createElement("option");v.value="low",v.textContent="low",u.append(v);const x=document.createElement("button");x.type="submit",x.textContent="Submit",n.append(x),x.addEventListener("click",(()=>{C(),""===document.getElementById("title").value?alert("Please input title."):""===document.getElementById("duedate").value?alert("Please input due-date."):(f.addTodo(document.getElementById("title").value,document.getElementById("description").value,document.getElementById("duedate").value,document.getElementById("priority").value,document.getElementById("project").value),n.remove(),E())}))}()})),e.append(t)}(),document.querySelector(".all").addEventListener("click",(()=>{E()})),document.querySelector(".study").addEventListener("click",(()=>{!function(){const e=document.querySelector(".study"),t=document.querySelector(".selected");t&&t.classList.remove("selected"),e.classList.add("selected");const n=v.filter((e=>"study"===e.project));y.textContent="",n.forEach(((e,t)=>{const n=document.createElement("div");n.classList.add("todo-item"),n.classList.add(g(e.title)),"high"===e.priority?n.classList.add("high"):"medium"===e.priority?n.classList.add("medium"):"low"===e.priority&&n.classList.add("low"),y.append(n),!0===e.done&&n.classList.add("done");const o=document.createElement("div");o.classList.add("todo-left"),n.append(o);const d=document.createElement("label");d.textContent=e.title,d.setAttribute("for",g(e.title)),o.append(d),!0===e.done&&d.classList.add("done");const i=document.createElement("div");i.classList.add("todo-right"),n.append(i);const a=document.createElement("div");a.textContent=e.dueDate,i.append(a),!0===e.done&&a.classList.add("done")}))}()})),document.querySelector(".gym").addEventListener("click",(()=>{!function(){const e=document.querySelector(".gym"),t=document.querySelector(".selected");t&&t.classList.remove("selected"),e.classList.add("selected");const n=v.filter((e=>"gym"===e.project));y.textContent="",n.forEach(((e,t)=>{const n=document.createElement("div");n.classList.add("todo-item"),n.classList.add(g(e.title)),"high"===e.priority?n.classList.add("high"):"medium"===e.priority?n.classList.add("medium"):"low"===e.priority&&n.classList.add("low"),y.append(n),!0===e.done&&n.classList.add("done");const o=document.createElement("div");o.classList.add("todo-left"),n.append(o);const d=document.createElement("label");d.textContent=e.title,d.setAttribute("for",g(e.title)),o.append(d),!0===e.done&&d.classList.add("done");const i=document.createElement("div");i.classList.add("todo-right"),n.append(i);const a=document.createElement("div");a.textContent=e.dueDate,i.append(a),!0===e.done&&a.classList.add("done")}))}()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,