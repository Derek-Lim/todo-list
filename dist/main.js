(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>r});var o=n(537),d=n.n(o),c=n(645),a=n.n(c)()(d());a.push([e.id,"body {\n    display: grid;\n    grid-template: 100px 650px / 1fr 3fr;\n    gap: 10px;\n}\n\nheader {\n    grid-area: 1 / 1 / 2 / 3;\n    font-size: 50px;\n    background-color: lightpink;\n    padding: 20px;\n    text-align: center;\n    border: 3px solid black;\n}\n\ndiv.sidebar {\n    grid-area: 2 / 1 / 3 / 2;\n    font-size: 30px;\n    background-color: aliceblue;\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    align-items: center;\n    border: 3px solid black;\n    overflow: auto;\n}\n\n.sidebar > .selected {\n    font-weight: 900;\n}\n\n.add-todo-button,\n.add-project-button,\n.delete-project-button {\n    border-radius: 10px;\n    font-size: 20px;\n}\n\ndiv.todo-list {\n    grid-area: 2 / 2 / 3 / 3;\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n}\n\ndiv.todo-item {\n    display: flex;\n    justify-content: space-between;\n    background-color: lightgrey;\n    color: black;\n    padding: 10px;\n}\n\ndiv.todo-item.high {\n    border: 2px solid red;\n}\n\ndiv.todo-item.medium {\n    border: 2px solid orange;\n}\n\ndiv.todo-item.low {\n    border: 2px solid yellow;\n}\n\ndiv.todo-item > div {\n    display: flex;\n    gap: 20px;\n}\n\ndiv.todo-item .done {\n    color: grey;\n}\n\ndiv.todo-item label.done {\n    text-decoration: line-through;\n}\n\nform {\n    font-size: 20px;\n    border: 1px solid black;\n    width: max(150px, 85%);\n    display: flex;\n    flex-direction: column;\n    margin: 10px;\n    padding: 10px;\n    gap: 10px;\n}\n\ndiv.edit {\n    display: grid;\n    gap: 0px 150px;\n    grid-template-columns: 200px 1fr;\n    grid-template-rows: 1fr;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,oCAAoC;IACpC,SAAS;AACb;;AAEA;IACI,wBAAwB;IACxB,eAAe;IACf,2BAA2B;IAC3B,aAAa;IACb,kBAAkB;IAClB,uBAAuB;AAC3B;;AAEA;IACI,wBAAwB;IACxB,eAAe;IACf,2BAA2B;IAC3B,aAAa;IACb,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,mBAAmB;IACnB,uBAAuB;IACvB,cAAc;AAClB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;;;IAGI,mBAAmB;IACnB,eAAe;AACnB;;AAEA;IACI,wBAAwB;IACxB,aAAa;IACb,sBAAsB;IACtB,QAAQ;AACZ;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,2BAA2B;IAC3B,YAAY;IACZ,aAAa;AACjB;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,wBAAwB;AAC5B;;AAEA;IACI,wBAAwB;AAC5B;;AAEA;IACI,aAAa;IACb,SAAS;AACb;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,6BAA6B;AACjC;;AAEA;IACI,eAAe;IACf,uBAAuB;IACvB,sBAAsB;IACtB,aAAa;IACb,sBAAsB;IACtB,YAAY;IACZ,aAAa;IACb,SAAS;AACb;;AAEA;IACI,aAAa;IACb,cAAc;IACd,gCAAgC;IAChC,uBAAuB;AAC3B",sourcesContent:["body {\n    display: grid;\n    grid-template: 100px 650px / 1fr 3fr;\n    gap: 10px;\n}\n\nheader {\n    grid-area: 1 / 1 / 2 / 3;\n    font-size: 50px;\n    background-color: lightpink;\n    padding: 20px;\n    text-align: center;\n    border: 3px solid black;\n}\n\ndiv.sidebar {\n    grid-area: 2 / 1 / 3 / 2;\n    font-size: 30px;\n    background-color: aliceblue;\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    align-items: center;\n    border: 3px solid black;\n    overflow: auto;\n}\n\n.sidebar > .selected {\n    font-weight: 900;\n}\n\n.add-todo-button,\n.add-project-button,\n.delete-project-button {\n    border-radius: 10px;\n    font-size: 20px;\n}\n\ndiv.todo-list {\n    grid-area: 2 / 2 / 3 / 3;\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n}\n\ndiv.todo-item {\n    display: flex;\n    justify-content: space-between;\n    background-color: lightgrey;\n    color: black;\n    padding: 10px;\n}\n\ndiv.todo-item.high {\n    border: 2px solid red;\n}\n\ndiv.todo-item.medium {\n    border: 2px solid orange;\n}\n\ndiv.todo-item.low {\n    border: 2px solid yellow;\n}\n\ndiv.todo-item > div {\n    display: flex;\n    gap: 20px;\n}\n\ndiv.todo-item .done {\n    color: grey;\n}\n\ndiv.todo-item label.done {\n    text-decoration: line-through;\n}\n\nform {\n    font-size: 20px;\n    border: 1px solid black;\n    width: max(150px, 85%);\n    display: flex;\n    flex-direction: column;\n    margin: 10px;\n    padding: 10px;\n    gap: 10px;\n}\n\ndiv.edit {\n    display: grid;\n    gap: 0px 150px;\n    grid-template-columns: 200px 1fr;\n    grid-template-rows: 1fr;\n}"],sourceRoot:""}]);const r=a},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,d,c){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var r=0;r<this.length;r++){var i=this[r][0];null!=i&&(a[i]=!0)}for(var s=0;s<e.length;s++){var l=[].concat(e[s]);o&&a[l[0]]||(void 0!==c&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=c),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),d&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=d):l[4]="".concat(d)),t.push(l))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),d="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),c="/*# ".concat(d," */");return[t].concat([c]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var c={},a=[],r=0;r<e.length;r++){var i=e[r],s=o.base?i[0]+o.base:i[0],l=c[s]||0,u="".concat(s," ").concat(l);c[s]=l+1;var p=n(u),m={css:i[1],media:i[2],sourceMap:i[3],supports:i[4],layer:i[5]};if(-1!==p)t[p].references++,t[p].updater(m);else{var A=d(m,o);o.byIndex=r,t.splice(r,0,{identifier:u,updater:A,references:1})}a.push(u)}return a}function d(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,d){var c=o(e=e||[],d=d||{});return function(e){e=e||[];for(var a=0;a<c.length;a++){var r=n(c[a]);t[r].references--}for(var i=o(e,d),s=0;s<c.length;s++){var l=n(c[s]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}c=i}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var d=void 0!==n.layer;d&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,d&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var c=n.sourceMap;c&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(c))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var d=t[o];if(void 0!==d)return d.exports;var c=t[o]={id:o,exports:{}};return e[o](c,c.exports,n),c.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{var e=n(379),t=n.n(e),o=n(795),d=n.n(o),c=n(569),a=n.n(c),r=n(565),i=n.n(r),s=n(216),l=n.n(s),u=n(589),p=n.n(u),m=n(426),A={};A.styleTagTransform=p(),A.setAttributes=i(),A.insert=a().bind(null,"head"),A.domAPI=d(),A.insertStyleElement=l(),t()(m.Z,A),m.Z&&m.Z.locals&&m.Z.locals;const f=function(){const e=[{title:"learn webkit",description:"",dueDate:"2023-10-30",priority:"high",done:!1,project:"study"},{title:"jog",project:"gym",description:"10 miles",dueDate:"2023-10-31",priority:"medium",done:!1,project:"gym"}];return{getList:()=>e,addTodo:(t,n,o,d,c)=>{e.push(function(e,t,n,o,d=""){return{title:e,description:t,dueDate:n,priority:o,done:!1,project:d}}(t,n,o,d,c))},markDone:e=>e.done=!0,markUndone:e=>e.done=!1}}(),v=f.getList(),y=document.querySelector("body"),b=document.createElement("div");function x(e){b.textContent="",e.forEach(((t,n)=>{const o=document.createElement("div");o.classList.add("todo-item"),o.classList.add(g(t.title)),"high"===t.priority?o.classList.add("high"):"medium"===t.priority?o.classList.add("medium"):"low"===t.priority&&o.classList.add("low"),b.append(o),!0===t.done&&o.classList.add("done");const d=document.createElement("div");d.classList.add("todo-left"),o.append(d);const c=document.createElement("input");c.setAttribute("type","checkbox"),c.setAttribute("id",g(t.title)),c.setAttribute("name",g(t.title)),c.addEventListener("click",(()=>{!function(e,t,n,o,d,c,a,r){!0===n.checked?(t.classList.add("done"),o.classList.add("done"),d.classList.add("done"),c.classList.add("done"),a.classList.add("done"),r.markDone(e)):!1===n.checked&&(t.classList.remove("done"),o.classList.remove("done"),d.classList.remove("done"),c.classList.remove("done"),a.classList.remove("done"),r.markUndone(e))}(t,o,c,a,i,s,l,f)})),d.append(c),!0===t.done&&(c.checked=!0);const a=document.createElement("label");a.textContent=t.title,a.setAttribute("for",g(t.title)),d.append(a),!0===t.done&&a.classList.add("done");const r=document.createElement("div");r.classList.add("todo-right"),o.append(r);const i=document.createElement("button");i.classList.add("details"),i.textContent="Details",i.addEventListener("click",(()=>{!function(e,t){const n=document.createElement("form"),o=document.querySelector(".todo-item > form");o&&o.remove();const d=document.querySelector(`.${g(e.title)}`);d.classList.add("edit"),d.append(n);const c=document.createElement("label");c.textContent="Title: ",c.setAttribute("for","title"),n.append(c);const a=document.createElement("input");a.type="text",a.name="title",a.id="title",a.setAttribute("value",e.title),n.append(a);const r=document.createElement("label");r.textContent="Project: ",r.setAttribute("for","project"),n.append(r);const i=document.createElement("input");i.type="text",i.name="project",i.id="project",i.setAttribute("value",e.project),n.append(i);const s=document.createElement("label");s.textContent="Description: ",s.setAttribute("for","description"),n.append(s);const l=document.createElement("input");l.type="text",l.name="description",l.id="description",l.setAttribute("value",e.description),n.append(l);const u=document.createElement("label");u.textContent="Due-date: ",u.setAttribute("for","duedate"),n.append(u);const p=document.createElement("input");p.type="date",p.name="duedate",p.id="duedate",p.setAttribute("value",e.dueDate),n.append(p);const m=document.createElement("label");m.textContent="Priority: ",m.setAttribute("for","priority"),n.append(m);const A=document.createElement("select");A.id="priority",n.append(A);const f=document.createElement("option");f.value="high",f.textContent="high",A.append(f);const y=document.createElement("option");y.value="medium",y.textContent="medium",A.append(y);const b=document.createElement("option");b.value="low",b.textContent="low",A.append(b),"high"===e.priority?f.setAttribute("selected","selected"):"medium"===e.priority?y.setAttribute("selected","selected"):"low"===e.priority&&b.setAttribute("selected","selected");const x=document.createElement("button");x.type="submit",x.textContent="Confirm Edit",n.append(x),x.addEventListener("click",(()=>{E(),""===document.getElementById("title").value?alert("Please input title."):""===document.getElementById("duedate").value?alert("Please input due-date."):(v.splice(t,1,{title:document.getElementById("title").value,description:document.getElementById("description").value,dueDate:document.getElementById("duedate").value,priority:document.getElementById("priority").value,done:!1,project:document.getElementById("project").value}),n.remove(),L())}))}(t,n)})),r.append(i),!0===t.done&&i.classList.add("done");const s=document.createElement("div");s.textContent=t.dueDate,r.append(s),!0===t.done&&s.classList.add("done");const l=document.createElement("button");l.classList.add("delete"),l.textContent="Delete",l.addEventListener("click",(()=>{e.splice(n,1),x(e)})),r.append(l),!0===t.done&&l.classList.add("done")}))}b.classList.add("todo-list"),y.append(b);const g=e=>e.split(" ").join("-").toLowerCase();function C(){const e=document.querySelector(".sidebar"),t=document.createElement("button");t.classList.add("add-todo-button"),t.textContent="Add Todo",t.addEventListener("click",(()=>{!function(){const e=document.querySelector(".sidebar"),t=document.querySelector(".sidebar > form");t&&t.remove();const n=document.createElement("form");e.append(n);const o=document.createElement("label");o.textContent="Title: ",o.setAttribute("for","title"),n.append(o);const d=document.createElement("input");d.type="text",d.name="title",d.id="title",n.append(d);const c=document.createElement("label");c.textContent="Project: ",c.setAttribute("for","project"),n.append(c);const a=document.createElement("input");a.type="text",a.name="project",a.id="project",n.append(a);const r=document.createElement("label");r.textContent="Description: ",r.setAttribute("for","description"),n.append(r);const i=document.createElement("input");i.type="text",i.name="description",i.id="description",n.append(i);const s=document.createElement("label");s.textContent="Due-date: ",s.setAttribute("for","duedate"),n.append(s);const l=document.createElement("input");l.type="date",l.name="duedate",l.id="duedate",n.append(l);const u=document.createElement("label");u.textContent="Priority: ",u.setAttribute("for","priority"),n.append(u);const p=document.createElement("select");p.id="priority",n.append(p);const m=document.createElement("option");m.value="high",m.textContent="high",p.append(m);const A=document.createElement("option");A.value="medium",A.textContent="medium",p.append(A);const y=document.createElement("option");y.value="low",y.textContent="low",p.append(y);const b=document.createElement("button");b.type="submit",b.textContent="Submit",n.append(b),b.addEventListener("click",(()=>{E();const e=document.getElementById("title").value;let t=v.map((e=>e.title)).filter((t=>t.toLowerCase()===e.toLowerCase()));""===document.getElementById("title").value?alert("Please input title."):0!==t.length?alert("Todo already exists."):""===document.getElementById("duedate").value?alert("Please input due-date."):(f.addTodo(document.getElementById("title").value,document.getElementById("description").value,document.getElementById("duedate").value,document.getElementById("priority").value,document.getElementById("project").value),n.remove(),L())}));const x=document.createElement("button");x.type="text",x.textContent="Cancel",n.append(x),x.addEventListener("click",(()=>{n.remove()}))}()})),e.append(t)}function E(){document.querySelector("form").addEventListener("submit",(e=>{e.preventDefault()}))}function L(){const e=document.querySelector(".all"),t=document.querySelector(".selected");t&&t.classList.remove("selected"),e.classList.add("selected"),x(v)}function h(){const e=document.querySelector(".sidebar"),t=document.createElement("button");t.classList.add("add-project-button"),t.textContent="Add Project",t.addEventListener("click",(()=>{!function(){const e=document.querySelector(".sidebar"),t=document.querySelector(".sidebar > form");t&&t.remove();const n=document.createElement("form");e.append(n);const o=document.createElement("label");o.textContent="Project: ",o.setAttribute("for","project"),n.append(o);const d=document.createElement("input");d.type="text",d.name="project",d.id="project",n.append(d);const c=document.createElement("button");c.type="submit",c.textContent="Submit",n.append(c),c.addEventListener("click",(()=>{E();const t=document.getElementById("project").value,o=document.querySelectorAll(".sidebar > div");let d=[];o.forEach((e=>{d.push(e.textContent)}));let c=d.filter((e=>e.toLowerCase()===document.getElementById("project").value.toLowerCase()));if(""===document.getElementById("project").value)alert("Project name cannot be blank.");else if(0!==c.length)alert("Project already exists.");else{const o=document.createElement("div");o.textContent=t,o.classList.add(`${g(document.getElementById("project").value)}`),n.remove(),document.querySelector(".add-todo-button").remove(),document.querySelector(".add-project-button").remove(),document.querySelector(".delete-project-button").remove(),e.append(o),C(),h(),I(),o.addEventListener("click",(()=>{const e=document.querySelector(".selected");e&&e.classList.remove("selected"),o.classList.add("selected");const n=v.filter((e=>e.project.toLowerCase()===t.toLowerCase()));b.textContent="",n.forEach((e=>{const t=document.createElement("div");t.classList.add("todo-item"),t.classList.add(g(e.title)),"high"===e.priority?t.classList.add("high"):"medium"===e.priority?t.classList.add("medium"):"low"===e.priority&&t.classList.add("low"),b.append(t),!0===e.done&&t.classList.add("done");const n=document.createElement("div");n.classList.add("todo-left"),t.append(n);const o=document.createElement("label");o.textContent=e.title,o.setAttribute("for",g(e.title)),n.append(o),!0===e.done&&o.classList.add("done");const d=document.createElement("div");d.classList.add("todo-right"),t.append(d);const c=document.createElement("div");c.textContent=e.dueDate,d.append(c),!0===e.done&&c.classList.add("done")}))})),B()}}));const a=document.createElement("button");a.type="text",a.textContent="Cancel",n.append(a),a.addEventListener("click",(()=>{n.remove()}))}()})),e.append(t)}function I(){const e=document.querySelector(".sidebar"),t=document.createElement("button");t.textContent="Delete Project",t.classList.add("delete-project-button"),e.append(t),t.addEventListener("click",(()=>{!function(){const e=document.querySelector(".sidebar"),t=document.querySelector(".sidebar > form");t&&t.remove();const n=document.createElement("form");e.append(n);const o=document.createElement("label");o.textContent="Remove: ",o.setAttribute("for","project"),n.append(o);const d=document.createElement("select");d.id="project",n.append(d);const c=document.querySelectorAll(".sidebar > div");c.forEach((e=>{if("All"!==e.textContent&&"Study"!==e.textContent&&"Gym"!==e.textContent){const t=document.createElement("option");t.value=`${e.textContent.toLowerCase()}`,t.textContent=`${e.textContent}`,d.append(t)}}));const a=document.createElement("button");a.textContent="Remove",n.append(a),a.addEventListener("click",(()=>{if(E(),""===document.getElementById("project").value)n.remove();else{let e=[];c.forEach((t=>{e.push(t.textContent)}));const t=e.filter((e=>e.toLowerCase()===document.getElementById("project").value.toLowerCase())).pop();document.querySelector(`.${t.toLowerCase()}`).remove(),function(e){const t=[],n=[],o={};for(let e=0;e<localStorage.length;e++)t.push(localStorage.key(e));t.forEach((e=>{const t=localStorage.getItem(e);n.push(t),o[t]=e}));const d=n.filter((t=>t.toLowerCase()===e)).pop(),c=o[d];console.log(localStorage.length),localStorage.removeItem(c),console.log(localStorage.length)}(document.getElementById("project").value),localStorage.clear(),B(),n.remove()}}));const r=document.createElement("button");r.type="text",r.textContent="Cancel",n.append(r),r.addEventListener("click",(()=>{n.remove()}))}()}))}function B(){document.querySelectorAll(".sidebar > div").forEach(((e,t)=>{"All"!==e.textContent&&"Study"!==e.textContent&&"Gym"!==e.textContent&&localStorage.setItem("project"+(t-3),e.textContent)}))}L(),C(),h(),I(),document.querySelector(".all").addEventListener("click",(()=>{L()})),document.querySelector(".study").addEventListener("click",(()=>{!function(){const e=document.querySelector(".study"),t=document.querySelector(".selected");t&&t.classList.remove("selected"),e.classList.add("selected");const n=v.filter((e=>"study"===e.project));b.textContent="",n.forEach(((e,t)=>{const n=document.createElement("div");n.classList.add("todo-item"),n.classList.add(g(e.title)),"high"===e.priority?n.classList.add("high"):"medium"===e.priority?n.classList.add("medium"):"low"===e.priority&&n.classList.add("low"),b.append(n),!0===e.done&&n.classList.add("done");const o=document.createElement("div");o.classList.add("todo-left"),n.append(o);const d=document.createElement("label");d.textContent=e.title,d.setAttribute("for",g(e.title)),o.append(d),!0===e.done&&d.classList.add("done");const c=document.createElement("div");c.classList.add("todo-right"),n.append(c);const a=document.createElement("div");a.textContent=e.dueDate,c.append(a),!0===e.done&&a.classList.add("done")}))}()})),document.querySelector(".gym").addEventListener("click",(()=>{!function(){const e=document.querySelector(".gym"),t=document.querySelector(".selected");t&&t.classList.remove("selected"),e.classList.add("selected");const n=v.filter((e=>"gym"===e.project));b.textContent="",n.forEach(((e,t)=>{const n=document.createElement("div");n.classList.add("todo-item"),n.classList.add(g(e.title)),"high"===e.priority?n.classList.add("high"):"medium"===e.priority?n.classList.add("medium"):"low"===e.priority&&n.classList.add("low"),b.append(n),!0===e.done&&n.classList.add("done");const o=document.createElement("div");o.classList.add("todo-left"),n.append(o);const d=document.createElement("label");d.textContent=e.title,d.setAttribute("for",g(e.title)),o.append(d),!0===e.done&&d.classList.add("done");const c=document.createElement("div");c.classList.add("todo-right"),n.append(c);const a=document.createElement("div");a.textContent=e.dueDate,c.append(a),!0===e.done&&a.classList.add("done")}))}()})),function(){for(let e=0;e<localStorage.length;e++){const t=document.querySelector(".sidebar"),n=localStorage.getItem(`project${e}`),o=document.createElement("div");o.textContent=n,o.classList.add(`${g(n)}`),document.querySelector(".add-todo-button").remove(),document.querySelector(".add-project-button").remove(),document.querySelector(".delete-project-button").remove(),t.append(o),C(),h(),I(),o.addEventListener("click",(()=>{const e=document.querySelector(".selected");e&&e.classList.remove("selected"),o.classList.add("selected");const t=v.filter((e=>e.project.toLowerCase()===n.toLowerCase()));b.textContent="",t.forEach((e=>{const t=document.createElement("div");t.classList.add("todo-item"),t.classList.add(g(e.title)),"high"===e.priority?t.classList.add("high"):"medium"===e.priority?t.classList.add("medium"):"low"===e.priority&&t.classList.add("low"),b.append(t),!0===e.done&&t.classList.add("done");const n=document.createElement("div");n.classList.add("todo-left"),t.append(n);const o=document.createElement("label");o.textContent=e.title,o.setAttribute("for",g(e.title)),n.append(o),!0===e.done&&o.classList.add("done");const d=document.createElement("div");d.classList.add("todo-right"),t.append(d);const c=document.createElement("div");c.textContent=e.dueDate,d.append(c),!0===e.done&&c.classList.add("done")}))}))}}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,